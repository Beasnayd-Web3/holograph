// Angello's hot deployer
declare var global: any;
import { HardhatRuntimeEnvironment } from 'hardhat/types';
import { DeployFunction } from '@holographxyz/hardhat-deploy-holographed/types';
import { getDeployer } from '../scripts/utils/helpers';
import { ethers } from 'hardhat';
import path from 'path';

const func: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
  console.log(`Starting deploy script: ${path.basename(__filename)} ðŸ‘‡`);
  const deployer = await getDeployer(hre);
  const deployerAddress = await deployer.deployer.getAddress();
  // Define these values based on the signatures generated by the generate signature script
  const nonce = 2; // The nonce used in the signing process
  const newDeployer = ''; // The address to approve or disapprove
  const approve = true; // true to approve, false to disapprove
  const sig1 = ''; // The first signature
  const sig2 = ''; // The second signature
  // Execute the approval
  const holographGenesis = await hre.ethers.getContract('HolographGenesis', deployer.signer);
  console.log(`HolgraphGenesis address: ${holographGenesis.address}`);
  // Construct the transaction
  const tx = await holographGenesis.approveDeployer(nonce, newDeployer, approve, sig1, sig2);
  console.log(`Transaction submitted: ${tx.hash}`);
  const receipt = await tx.wait();
  console.log(`Transaction confirmed ${receipt.hash}`);
  console.log(`Exiting script: ${__filename} âœ…\n`);
};

export default func;
func.tags = ['ApproveDeployer'];
func.dependencies = [];
