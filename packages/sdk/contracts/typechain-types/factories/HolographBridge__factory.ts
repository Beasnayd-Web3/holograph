/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  HolographBridge,
  HolographBridgeInterface,
} from "../HolographBridge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "adminCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "fromChain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "holographableContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "hToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "hTokenRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "hTokenValue",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "doNotRevert",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "bridgeInPayload",
        type: "bytes",
      },
    ],
    name: "bridgeInRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "toChain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "holographableContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "bridgeOutPayload",
        type: "bytes",
      },
    ],
    name: "bridgeOutRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "toChain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "holographableContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "bridgeOutPayload",
        type: "bytes",
      },
    ],
    name: "getBridgeOutRequestPayload",
    outputs: [
      {
        internalType: "bytes",
        name: "samplePayload",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFactory",
    outputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHolograph",
    outputs: [
      {
        internalType: "address",
        name: "holograph",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getJobNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "jobNonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getMessageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistry",
    outputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initPayload",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "toChain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "holographableContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "bridgeOutPayload",
        type: "bytes",
      },
    ],
    name: "revertedBridgeOutRequest",
    outputs: [
      {
        internalType: "string",
        name: "revertReason",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holograph",
        type: "address",
      },
    ],
    name: "setHolograph",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612754806100206000396000f3fe6080604052600436106101485760003560e01c80636e9960c3116100c0578063bf64a82d11610074578063e7f43c6811610059578063e7f43c6814610403578063f851a44014610437578063ff1370d91461044c57600080fd5b8063bf64a82d146103dd578063e5585666146103f057600080fd5b806388cc58e4116100a557806388cc58e414610369578063a91ee0dc1461039d578063b3ab15fb146103bd57600080fd5b80636e9960c314610315578063704b6c021461034957600080fd5b8063565ff49e116101175780635bb47808116100fc5780635bb47808146102985780636200d9fc146102b8578063636ee68b146102f557600080fd5b8063565ff49e146102375780635ab1bd531461026457600080fd5b806316f1be701461015757806325d5cac81461016c5780634827ae0c1461018c5780634ddf47d4146101e657600080fd5b3661015257600080fd5b600080fd5b61016a610165366004611da9565b610487565b005b34801561017857600080fd5b5061016a610187366004611e60565b6109c5565b34801561019857600080fd5b507fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a545b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101f257600080fd5b50610206610201366004611f44565b610a9f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101dd565b34801561024357600080fd5b50610257610252366004611fca565b610c55565b6040516101dd91906120c0565b34801561027057600080fd5b507fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e7546101bc565b3480156102a457600080fd5b5061016a6102b3366004611e60565b610e15565b3480156102c457600080fd5b507f1cda64803f3b43503042e00863791e8d996666552d5855a78d53ee1dd4b3286d546040519081526020016101dd565b34801561030157600080fd5b506102576103103660046120d3565b610eef565b34801561032157600080fd5b507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c9546101bc565b34801561035557600080fd5b5061016a610364366004611e60565b61159e565b34801561037557600080fd5b507fa49f20855ba576e09d13c8041c8039fa655356ea27f6c40f1ec46a4301cd5b23546101bc565b3480156103a957600080fd5b5061016a6103b8366004611e60565b611678565b3480156103c957600080fd5b5061016a6103d8366004611e60565b611752565b61016a6103eb36600461214f565b61182c565b61016a6103fe3660046120d3565b611907565b34801561040f57600080fd5b507f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f546101bc565b34801561044357600080fd5b506101bc611ca7565b34801561045857600080fd5b5061046c6104673660046121a4565b611cd6565b604080519384526020840192909252908201526060016101dd565b7f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f5473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f484f4c4f47524150483a206f70657261746f72206f6e6c792063616c6c00000060448201526064015b60405180910390fd5b7fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e7546040517f44b25fff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015291909116906344b25fff90602401602060405180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f691906121f1565b8061065357508673ffffffffffffffffffffffffffffffffffffffff1661063b7fa49f20855ba576e09d13c8041c8039fa655356ea27f6c40f1ec46a4301cd5b235490565b73ffffffffffffffffffffffffffffffffffffffff16145b6106b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f484f4c4f47524150483a206e6f7420686f6c6f677261706865640000000000006044820152606401610539565b6040517f08a1eb2000000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8916906308a1eb2090610712908c9087908790600401612257565b6020604051808303816000875af1158015610731573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075591906122ac565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f08a1eb200000000000000000000000000000000000000000000000000000000014610802576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f484f4c4f47524150483a2062726964676520696e206661696c656400000000006044820152606401610539565b600085118015610827575073ffffffffffffffffffffffffffffffffffffffff861615155b15610952576040517ffad66f920000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff88811660048401526024830188905290919089169063fad66f92906044016020604051808303816000875af11580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c991906122ac565b7fffffffff000000000000000000000000000000000000000000000000000000001614610952576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f484f4c4f47524150483a2068546f6b656e206d696e74206661696c65640000006044820152606401610539565b836109b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f484f4c4f47524150483a207265766572746564000000000000000000000000006044820152606401610539565b50505050505050505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e00006044820152606401610539565b7fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a55565b6000610ac97f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b15610b30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a20616c726561647920696e697469616c697a656400006044820152606401610539565b60008060008085806020019051810190610b4a91906122c7565b9350935093509350327f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955837fa49f20855ba576e09d13c8041c8039fa655356ea27f6c40f1ec46a4301cd5b2355827fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a55817f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f55807fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e755610c2a60017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d40000000000000000000000000000000000000000000000000000000095945050505050565b6040517fb7e0366100000000000000000000000000000000000000000000000000000000815260609073ffffffffffffffffffffffffffffffffffffffff85169063b7e0366190610cb09088908a9088908890600401612326565b6000604051808303816000875af1925050508015610d0e57506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d0b91908101906123b0565b60015b610d7c57610d1a612412565b806308c379a003610d405750610d2e61242e565b80610d395750610d42565b9050610e0c565b505b5060408051808201909152601881527f484f4c4f47524150483a20756e6b6e6f776e206572726f7200000000000000006020820152610e0c565b7fffffffff0000000000000000000000000000000000000000000000000000000082167fb7e036610000000000000000000000000000000000000000000000000000000014610e04576040518060400160405280601c81526020017f484f4c4f47524150483a20627269646765206f7574206661696c65640000000081525092505050610e0c565b805160208201fd5b95945050505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ecb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e00006044820152606401610539565b7fa49f20855ba576e09d13c8041c8039fa655356ea27f6c40f1ec46a4301cd5b2355565b6060610f197fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e75490565b6040517f44b25fff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015291909116906344b25fff90602401602060405180830381865afa158015610f87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fab91906121f1565b8061100857508573ffffffffffffffffffffffffffffffffffffffff16610ff07fa49f20855ba576e09d13c8041c8039fa655356ea27f6c40f1ec46a4301cd5b235490565b73ffffffffffffffffffffffffffffffffffffffff16145b61106e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f484f4c4f47524150483a206e6f7420686f6c6f677261706865640000000000006044820152606401610539565b6040517f565ff49e000000000000000000000000000000000000000000000000000000008152606090309063565ff49e906110b59033908c908c908a908a906004016124d6565b6000604051808303816000875af192505050801561111357506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111109190810190612527565b60015b61114e573d808015611141576040519150601f19603f3d011682016040523d82523d6000602084013e611146565b606091505b509050611182565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053991906120c0565b7f1cda64803f3b43503042e00863791e8d996666552d5855a78d53ee1dd4b3286d5460007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff871080156111f457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff88105b156112ba576000806112247f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f5490565b73ffffffffffffffffffffffffffffffffffffffff1663ff1370d98d8c8c8c8c6040518663ffffffff1660e01b8152600401611264959493929190612578565b606060405180830381865afa158015611281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a591906125a4565b9250509150886000036112b6578098505b5090505b60007f16f1be70000000000000000000000000000000000000000000000000000000006112e88460016125d2565b7fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a5473ffffffffffffffffffffffffffffffffffffffff1663381b5f466040518163ffffffff1660e01b8152600401602060405180830381865afa158015611354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113789190612611565b8c6113a17fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e75490565b73ffffffffffffffffffffffffffffffffffffffff1663949d53a76113e47fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a5490565b73ffffffffffffffffffffffffffffffffffffffff1663381b5f466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114529190612611565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815263ffffffff919091166004820152602401602060405180830381865afa1580156114ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d0919061262e565b60008760018b6040516024016114ed98979695949392919061264b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909516949094179093525190925061157f9183918c918c91016126bc565b6040516020818303038152906040529450505050509695505050505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e00006044820152606401610539565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461172e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e00006044820152606401610539565b7fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e755565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611808576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e00006044820152606401610539565b7f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f55565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e00006044820152606401610539565b808260003760008082600034875af13d6000803e808015611902573d6000f35b3d6000fd5b7fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e7546040517f44b25fff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015291909116906344b25fff90602401602060405180830381865afa158015611997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bb91906121f1565b80611a1857508473ffffffffffffffffffffffffffffffffffffffff16611a007fa49f20855ba576e09d13c8041c8039fa655356ea27f6c40f1ec46a4301cd5b235490565b73ffffffffffffffffffffffffffffffffffffffff16145b611a7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f484f4c4f47524150483a206e6f7420686f6c6f677261706865640000000000006044820152606401610539565b6000808673ffffffffffffffffffffffffffffffffffffffff1663b7e03661893387876040518563ffffffff1660e01b8152600401611ac09493929190612326565b6000604051808303816000875af1158015611adf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611b2591908101906123b0565b90925090507fffffffff0000000000000000000000000000000000000000000000000000000082167fb7e036610000000000000000000000000000000000000000000000000000000014611bd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f484f4c4f47524150483a20627269646765206f7574206661696c6564000000006044820152606401610539565b7f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f5473ffffffffffffffffffffffffffffffffffffffff1663409aad693488888c33611c477f1cda64803f3b43503042e00863791e8d996666552d5855a78d53ee1dd4b3286d80546001019081905590565b8e896040518963ffffffff1660e01b8152600401611c6b97969594939291906126e3565b6000604051808303818588803b158015611c8457600080fd5b505af1158015611c98573d6000803e3d6000fd5b50505050505050505050505050565b6000611cd17f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95490565b905090565b600080600036600080376000803660007f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f545afa3d6000803e808015611902573d6000f35b63ffffffff81168114611d2d57600080fd5b50565b73ffffffffffffffffffffffffffffffffffffffff81168114611d2d57600080fd5b8015158114611d2d57600080fd5b60008083601f840112611d7257600080fd5b50813567ffffffffffffffff811115611d8a57600080fd5b602083019150836020828501011115611da257600080fd5b9250929050565b60008060008060008060008060006101008a8c031215611dc857600080fd5b8935985060208a0135611dda81611d1b565b975060408a0135611dea81611d30565b965060608a0135611dfa81611d30565b955060808a0135611e0a81611d30565b945060a08a0135935060c08a0135611e2181611d52565b925060e08a013567ffffffffffffffff811115611e3d57600080fd5b611e498c828d01611d60565b915080935050809150509295985092959850929598565b600060208284031215611e7257600080fd5b8135611e7d81611d30565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715611ef757611ef7611e84565b6040525050565b600067ffffffffffffffff821115611f1857611f18611e84565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215611f5657600080fd5b813567ffffffffffffffff811115611f6d57600080fd5b8201601f81018413611f7e57600080fd5b8035611f8981611efe565b604051611f968282611eb3565b828152866020848601011115611fab57600080fd5b8260208501602083013760009281016020019290925250949350505050565b600080600080600060808688031215611fe257600080fd5b8535611fed81611d30565b94506020860135611ffd81611d1b565b9350604086013561200d81611d30565b9250606086013567ffffffffffffffff81111561202957600080fd5b61203588828901611d60565b969995985093965092949392505050565b60005b83811015612061578181015183820152602001612049565b83811115612070576000848401525b50505050565b6000815180845261208e816020860160208601612046565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611e7d6020830184612076565b60008060008060008060a087890312156120ec57600080fd5b86356120f781611d1b565b9550602087013561210781611d30565b94506040870135935060608701359250608087013567ffffffffffffffff81111561213157600080fd5b61213d89828a01611d60565b979a9699509497509295939492505050565b60008060006040848603121561216457600080fd5b833561216f81611d30565b9250602084013567ffffffffffffffff81111561218b57600080fd5b61219786828701611d60565b9497909650939450505050565b6000806000806000608086880312156121bc57600080fd5b85356121c781611d1b565b94506020860135935060408601359250606086013567ffffffffffffffff81111561202957600080fd5b60006020828403121561220357600080fd5b8151611e7d81611d52565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b63ffffffff84168152604060208201526000610e0c60408301848661220e565b80517fffffffff00000000000000000000000000000000000000000000000000000000811681146122a757600080fd5b919050565b6000602082840312156122be57600080fd5b611e7d82612277565b600080600080608085870312156122dd57600080fd5b84516122e881611d30565b60208601519094506122f981611d30565b604086015190935061230a81611d30565b606086015190925061231b81611d30565b939692955090935050565b63ffffffff8516815273ffffffffffffffffffffffffffffffffffffffff8416602082015260606040820152600061236260608301848661220e565b9695505050505050565b600061237783611efe565b6040516123848282611eb3565b80925084815285858501111561239957600080fd5b6123a7856020830186612046565b50509392505050565b600080604083850312156123c357600080fd5b6123cc83612277565b9150602083015167ffffffffffffffff8111156123e857600080fd5b8301601f810185136123f957600080fd5b6124088582516020840161236c565b9150509250929050565b600060033d111561242b5760046000803e5060005160e01c5b90565b600060443d101561243c5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561248a57505050505090565b82850191508151818111156124a25750505050505090565b843d87010160208285010111156124bc5750505050505090565b6124cb60208286010187611eb3565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835263ffffffff871660208401528086166040840152506080606083015261251c60808301848661220e565b979650505050505050565b60006020828403121561253957600080fd5b815167ffffffffffffffff81111561255057600080fd5b8201601f8101841361256157600080fd5b6125708482516020840161236c565b949350505050565b63ffffffff8616815284602082015283604082015260806060820152600061251c60808301848661220e565b6000806000606084860312156125b957600080fd5b8351925060208401519150604084015190509250925092565b6000821982111561260c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60006020828403121561262357600080fd5b8151611e7d81611d1b565b60006020828403121561264057600080fd5b8151611e7d81611d30565b60006101008a835263ffffffff8a16602084015273ffffffffffffffffffffffffffffffffffffffff808a16604085015280891660608501528088166080850152508560a084015284151560c08401528060e08401526126ad81840185612076565b9b9a5050505050505050505050565b600084516126ce818460208901612046565b91909101928352506020820152604001919050565b87815286602082015263ffffffff86166040820152600073ffffffffffffffffffffffffffffffffffffffff808716606084015285608084015280851660a08401525060e060c083015261273a60e0830184612076565b999850505050505050505056fea164736f6c634300080d000a";

type HolographBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HolographBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HolographBridge__factory extends ContractFactory {
  constructor(...args: HolographBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HolographBridge> {
    return super.deploy(overrides || {}) as Promise<HolographBridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HolographBridge {
    return super.attach(address) as HolographBridge;
  }
  override connect(signer: Signer): HolographBridge__factory {
    return super.connect(signer) as HolographBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HolographBridgeInterface {
    return new utils.Interface(_abi) as HolographBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HolographBridge {
    return new Contract(address, _abi, signerOrProvider) as HolographBridge;
  }
}
