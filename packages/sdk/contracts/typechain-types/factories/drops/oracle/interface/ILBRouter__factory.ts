/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILBRouter,
  ILBRouterInterface,
} from "../../../../drops/oracle/interface/ILBRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ILBPair",
        name: "LBPair",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amountOut",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "swapForY",
        type: "bool",
      },
    ],
    name: "getSwapIn",
    outputs: [
      {
        internalType: "uint128",
        name: "amountIn",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amountOutLeft",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "fee",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ILBRouter__factory {
  static readonly abi = _abi;
  static createInterface(): ILBRouterInterface {
    return new utils.Interface(_abi) as ILBRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILBRouter {
    return new Contract(address, _abi, signerOrProvider) as ILBRouter;
  }
}
