/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HolographRoyalties,
  HolographRoyaltiesInterface,
} from "../../enforcer/HolographRoyalties";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "bps",
        type: "uint256[]",
      },
    ],
    name: "SecondarySaleFees",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "adminCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "bidSharesForToken",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct HolographDecimal",
            name: "prevOwner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct HolographDecimal",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct HolographDecimal",
            name: "owner",
            type: "tuple",
          },
        ],
        internalType: "struct HolographBidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateRoyaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "bps",
        type: "uint256[]",
      },
    ],
    name: "configurePayouts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEthPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFeeBps",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFeeRecipients",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFees",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayoutInfo",
    outputs: [
      {
        internalType: "address payable[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "bps",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyalties",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSourceContract",
    outputs: [
      {
        internalType: "address",
        name: "sourceContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
    ],
    name: "getTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
    ],
    name: "getTokensPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initPayload",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initPayload",
        type: "bytes",
      },
    ],
    name: "initHolographRoyalties",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ownerCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bp",
        type: "uint256",
      },
    ],
    name: "setRoyalties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenCreators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613152806100206000396000f3fe6080604052600436106101c25760003560e01c80638da5cb5b116100f7578063c409123611610095578063eb66dbcf11610064578063eb66dbcf14610553578063f2fde38b14610566578063f851a44014610586578063f9ce05821461059b57600080fd5b8063c4091236146104f3578063d5a06d4c146104c0578063e0fd045f14610513578063e2c7f3381461053357600080fd5b8063b85ed7e4116100d1578063b85ed7e414610473578063b9c4d9fb14610493578063bb3bafd6146104c0578063bf64a82d146104e057600080fd5b80638da5cb5b1461043b578063990803c314610450578063a1794bcd146103a657600080fd5b80633328d219116101645780636faf275b1161013e5780636faf275b146103a6578063704b6c02146103b9578063860110f5146103d9578063893d20e81461040757600080fd5b80633328d219146103115780634ddf47d4146103315780636e9960c31461035157600080fd5b80631949ddf3116101a05780631949ddf3146102345780631aff10771461025457806320c60d2a146102a55780632a55205a146102c557600080fd5b80630ebd4c7f146101c757806312cb4738146101fd57806313af403514610214575b600080fd5b3480156101d357600080fd5b506101e76101e2366004612885565b6105e0565b6040516101f491906128d9565b60405180910390f35b34801561020957600080fd5b506102126106a1565b005b34801561022057600080fd5b5061021261022f36600461290e565b6106b3565b34801561024057600080fd5b5061021261024f36600461290e565b6107d3565b34801561026057600080fd5b5061027461026f366004612a1f565b6107e7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101f4565b3480156102b157600080fd5b506102126102c0366004612a94565b610aa9565b3480156102d157600080fd5b506102e56102e0366004612b33565b610aba565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016101f4565b34801561031d57600080fd5b5061021261032c366004612bbb565b610b69565b34801561033d57600080fd5b5061027461034c366004612a1f565b610ea9565b34801561035d57600080fd5b507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c9545b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101f4565b3480156103b257600080fd5b5030610381565b3480156103c557600080fd5b506102126103d436600461290e565b610ff5565b3480156103e557600080fd5b506103f96103f4366004612c7d565b6110cf565b6040519081526020016101f4565b34801561041357600080fd5b507fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf77277754610381565b34801561044757600080fd5b50610381611151565b34801561045c57600080fd5b50610465611180565b6040516101f4929190612cf8565b34801561047f57600080fd5b5061038161048e366004612d26565b61119b565b34801561049f57600080fd5b506104b36104ae366004612885565b6111ec565b6040516101f49190612d52565b3480156104cc57600080fd5b506104656104db366004612885565b611307565b6102126104ee366004612d65565b61149f565b3480156104ff57600080fd5b5061038161050e366004612a1f565b611581565b34801561051f57600080fd5b5061038161052e366004612885565b61158c565b34801561053f57600080fd5b5061021261054e366004612dea565b6115db565b610212610561366004612d65565b6118aa565b34801561057257600080fd5b5061021261058136600461290e565b611918565b34801561059257600080fd5b50610381611a27565b3480156105a757600080fd5b506105bb6105b6366004612885565b611a51565b60408051825151815260208084015151908201529181015151908201526060016101f4565b6040805160018082528183019092526060916000919060208083019080368337019050509050600061061184611b0a565b73ffffffffffffffffffffffffffffffffffffffff1603610672577fff29fcf645501423fd56e0287670f6813a1e5db5cf706428bc8516381e7ffe81548160008151811061066157610661612e22565b60200260200101818152505061069b565b61067b83611b65565b8160008151811061068e5761068e612e22565b6020026020010181815250505b92915050565b6106a9611bb2565b6106b1611ca7565b565b6106bb611e9d565b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a2063616c6c6572206e6f7420616e206f776e6572000060448201526064015b60405180910390fd5b60006107507fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b9050817fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf772777558173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107db611bb2565b6107e481612062565b50565b7f91428d26cb4818e4e627ebb64c06b5a67b82f313516b5c903cf07a00681c95f6546000908015610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a20616c726561647920696e697469616c697a65640000604482015260640161071d565b6000808480602001905181019061088b9190612e51565b9092509050801561089a575060015b807f254926eafdecb56f669f96a3a752fbca17becd902481431df613768b1f903fa3556108c9600030846115db565b604080516001808252818301909252600091602080830190803683370190505090503073ffffffffffffffffffffffffffffffffffffffff16636faf275b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a9190612e75565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190612e75565b816000815181106109db576109db612e22565b73ffffffffffffffffffffffffffffffffffffffff929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905061271081600081518110610a3b57610a3b612e22565b602002602001018181525050610a5082612248565b610a59816122d9565b505060017f91428d26cb4818e4e627ebb64c06b5a67b82f313516b5c903cf07a00681c95f655507f4ddf47d400000000000000000000000000000000000000000000000000000000949350505050565b610ab1611bb2565b6107e48161236a565b60008080610ac785611b0a565b73ffffffffffffffffffffffffffffffffffffffff1603610b4c577eb381815b89a20a37ee91e8a0119be5e16f6d1668377e7ae457213a74a415bb5461271084610b2f7fff29fcf645501423fd56e0287670f6813a1e5db5cf706428bc8516381e7ffe815490565b610b399190612ec1565b610b439190612efe565b91509150610b62565b610b5584611b0a565b61271084610b2f87611b65565b9250929050565b610b71611e9d565b610bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a2063616c6c6572206e6f7420616e206f776e65720000604482015260640161071d565b8051825114610c42576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a206d6973736d617463686564206c656e676874730000604482015260640161071d565b600a82511115610cae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f524f59414c544945533a206d6178203130206164647265737365730000000000604482015260640161071d565b6000805b8351811015610e2657600073ffffffffffffffffffffffffffffffffffffffff16848281518110610ce557610ce5612e22565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610d6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f524f59414c544945533a207061796565206973207a65726f2061646472657373604482015260640161071d565b6000838281518110610d7e57610d7e612e22565b602002602001015111610ded576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f524f59414c544945533a206270206973207a65726f0000000000000000000000604482015260640161071d565b828181518110610dff57610dff612e22565b602002602001015182610e129190612f39565b915080610e1e81612f51565b915050610cb2565b508061271014610e92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f524f59414c544945533a20627073206d75737420657175616c20313030303000604482015260640161071d565b610e9b83612248565b610ea4826122d9565b505050565b6000610ed37f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b15610f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a20616c726561647920696e697469616c697a65640000604482015260640161071d565b337f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955337fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf77277755600082806020019051810190610f969190612f89565b9050610fa4600030836115db565b610fcd60017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d40000000000000000000000000000000000000000000000000000000092915050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e0000604482015260640161071d565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955565b6000806110db84611b0a565b73ffffffffffffffffffffffffffffffffffffffff160361113d57612710826111227fff29fcf645501423fd56e0287670f6813a1e5db5cf706428bc8516381e7ffe815490565b61112c9190612ec1565b6111369190612efe565b905061114a565b6127108261112285611b65565b9392505050565b600061117b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b905090565b60608061118b612584565b915061119561267d565b90509091565b6000806111a783611b0a565b905073ffffffffffffffffffffffffffffffffffffffff811661114a5750507eb381815b89a20a37ee91e8a0119be5e16f6d1668377e7ae457213a74a415bb5461069b565b6040805160018082528183019092526060916000919060208083019080368337019050509050600061121d84611b0a565b73ffffffffffffffffffffffffffffffffffffffff16036112ab577eb381815b89a20a37ee91e8a0119be5e16f6d1668377e7ae457213a74a415bb548160008151811061126c5761126c612e22565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061069b565b6112b483611b0a565b816000815181106112c7576112c7612e22565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505092915050565b6040805160018082528183019092526060918291600091602080830190803683375050604080516001808252818301909252929350600092915060208083019080368337019050509050600061135c86611b0a565b73ffffffffffffffffffffffffffffffffffffffff1603611416577eb381815b89a20a37ee91e8a0119be5e16f6d1668377e7ae457213a74a415bb54826000815181106113ab576113ab612e22565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101527fff29fcf645501423fd56e0287670f6813a1e5db5cf706428bc8516381e7ffe81548160008151811061140557611405612e22565b602002602001018181525050611495565b61141f85611b0a565b8260008151811061143257611432612e22565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061147585611b65565b8160008151811061148857611488612e22565b6020026020010181815250505b9094909350915050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e0000604482015260640161071d565b808260003760008082600034875af13d6000803e808015611575573d6000f35b3d6000fd5b5050505050565b600061069b82612755565b60008061159883611b0a565b905073ffffffffffffffffffffffffffffffffffffffff811661069b577eb381815b89a20a37ee91e8a0119be5e16f6d1668377e7ae457213a74a415bb5461114a565b6115e3611e9d565b611649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a2063616c6c6572206e6f7420616e206f776e65720000604482015260640161071d565b73ffffffffffffffffffffffffffffffffffffffff82166116ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f524f59414c544945533a207265636569766572206973207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161071d565b612710811115611758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f524f59414c544945533a206261736520706f696e7473206f7665722031303025604482015260640161071d565b826000036117b457611787827eb381815b89a20a37ee91e8a0119be5e16f6d1668377e7ae457213a74a415bb55565b6117af817fff29fcf645501423fd56e0287670f6813a1e5db5cf706428bc8516381e7ffe8155565b6117c8565b6117be8383612785565b6117c883826127df565b6040805160018082528183019092526000916020808301908036833701905050905082816000815181106117fe576117fe612e22565b73ffffffffffffffffffffffffffffffffffffffff9290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050828160008151811061185c5761185c612e22565b6020026020010181815250507f99aba1d63749cfd5ad1afda7c4663840924d54eb5f005bbbeadedc6ec13674b285838360405161189b93929190612fa2565b60405180910390a15050505050565b6118b2611e9d565b611555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a2063616c6c6572206e6f7420616e206f776e65720000604482015260640161071d565b611920611e9d565b611986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f524f59414c544945533a2063616c6c6572206e6f7420616e206f776e65720000604482015260640161071d565b73ffffffffffffffffffffffffffffffffffffffff8116611a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f484f4c4f47524150483a207a65726f2061646472657373000000000000000000604482015260640161071d565b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf77277755565b600061117b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95490565b611a8e6040805160808101825260006060820181815282528251602080820185528282528084019190915283519081018452908152909182015290565b80516000908190526040820151819052611aa783611b0a565b73ffffffffffffffffffffffffffffffffffffffff1603611b01577fff29fcf645501423fd56e0287670f6813a1e5db5cf706428bc8516381e7ffe81545b611af690662386f26fc10000612ec1565b602082015152919050565b611ae582611b65565b60008060016040518060600160405280602481526020016131226024913984604051602001611b3a929190613049565b6040516020818303038152906040528051906020012060001c611b5d919061306b565b549392505050565b60008060016040518060400160405280601e81526020017f656970313936372e486f6c6f67726170682e524f59414c544945532e6270000081525084604051602001611b3a929190613049565b611bba611e9d565b6106b157600080611bc9612584565b90503360005b8251811015611c3f578173ffffffffffffffffffffffffffffffffffffffff16838281518110611c0157611c01612e22565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611c2d5760019350611c3f565b80611c3781612f51565b915050611bcf565b5082610ea4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f524f59414c544945533a2073656e646572206e6f7420617574686f72697a6564604482015260640161071d565b6000611cb1612584565b90506000611cbd61267d565b82517f254926eafdecb56f669f96a3a752fbca17becd902481431df613768b1f903fa354919250904790600090815b84811015611e945761271084878381518110611d0a57611d0a612e22565b6020026020010151611d1c9190612ec1565b611d269190612efe565b92508215611e8257811515600103611e21576000878281518110611d4c57611d4c612e22565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168460405160006040518083038185875af1925050503d8060008114611dab576040519150601f19603f3d011682016040523d82523d6000602084013e611db0565b606091505b5050905080611e1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f524f59414c544945533a205472616e73666572206661696c6564000000000000604482015260640161071d565b50611e82565b868181518110611e3357611e33612e22565b602002602001015173ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015611e80573d6000803e3d6000fd5b505b80611e8c81612f51565b915050611cec565b50505050505050565b6000611ec77fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611f4c57507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061117b57503073ffffffffffffffffffffffffffffffffffffffff16636faf275b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc19190612e75565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561200b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202f9190612e75565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600061206c612584565b9050600061207861267d565b82516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925090849060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156120ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121119190612f89565b90506000805b8481101561223e576127108387838151811061213557612135612e22565b60200260200101516121479190612ec1565b6121519190612efe565b9150811561222c576121c68863a9059cbb60e01b89848151811061217757612177612e22565b6020026020010151856040516020016121b292919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60405160208183030381529060405261282b565b61222c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f524f59414c544945533a204552433230207472616e73666572206661696c6564604482015260640161071d565b8061223681612f51565b915050612117565b5050505050505050565b80517ff31f2a3a453a7aa2f3054423a8c5474ac9817ea457b458152967bbcb12ed6a43818155906000805b8281101561157a5760408051602081018390529081018590526060016040516020818303038152906040528051906020012093508481815181106122b9576122b9612e22565b6020026020010151915081845580806122d190612f51565b915050612273565b80517fa4023567d5b5f01c63e00d90785d7cd4ff057a237ad185c5ecade8f4059fb61a818155906000805b8281101561157a57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935084818151811061234a5761234a612e22565b60200260200101519150818455808061236290612f51565b915050612304565b6000612374612584565b9050600061238061267d565b905060008080805b8651811015611e94578681815181106123a3576123a3612e22565b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561241b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243f9190612f89565b925060005b8651811015612571576127108487838151811061246357612463612e22565b60200260200101516124759190612ec1565b61247f9190612efe565b9250821561255f576124f988838151811061249c5761249c612e22565b602002602001015163a9059cbb60e01b8984815181106124be576124be612e22565b6020026020010151866040516020016121b292919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b61255f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f524f59414c544945533a204552433230207472616e73666572206661696c6564604482015260640161071d565b8061256981612f51565b915050612444565b508061257c81612f51565b915050612388565b7ff31f2a3a453a7aa2f3054423a8c5474ac9817ea457b458152967bbcb12ed6a438054606091908067ffffffffffffffff8111156125c4576125c461292b565b6040519080825280602002602001820160405280156125ed578160200160208202803683370190505b5092506000805b82811015612676576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350835491508185828151811061263f5761263f612e22565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061266e81612f51565b9150506125f4565b5050505090565b7fa4023567d5b5f01c63e00d90785d7cd4ff057a237ad185c5ecade8f4059fb61a8054606091908067ffffffffffffffff8111156126bd576126bd61292b565b6040519080825280602002602001820160405280156126e6578160200160208202803683370190505b5092506000805b82811015612676576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350835491508185828151811061273857612738612e22565b60209081029190910101528061274d81612f51565b9150506126ed565b60008060016040518060600160405280602881526020016130fa6028913984604051602001611b3a929190613082565b6000600160405180606001604052806024815260200161312260249139846040516020016127b4929190613049565b6040516020818303038152906040528051906020012060001c6127d7919061306b565b919091555050565b600060016040518060400160405280601e81526020017f656970313936372e486f6c6f67726170682e524f59414c544945532e62700000815250846040516020016127b4929190613049565b60008083836040516020016128419291906130b1565b6040516020818303038152906040529050600060019050600080835160208501348a5af1808015611575573d156128795760206000843e5b50909695505050505050565b60006020828403121561289757600080fd5b5035919050565b600081518084526020808501945080840160005b838110156128ce578151875295820195908201906001016128b2565b509495945050505050565b60208152600061114a602083018461289e565b73ffffffffffffffffffffffffffffffffffffffff811681146107e457600080fd5b60006020828403121561292057600080fd5b813561114a816128ec565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156129a1576129a161292b565b604052919050565b600067ffffffffffffffff8311156129c3576129c361292b565b6129f460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160161295a565b9050828152838383011115612a0857600080fd5b828260208301376000602084830101529392505050565b600060208284031215612a3157600080fd5b813567ffffffffffffffff811115612a4857600080fd5b8201601f81018413612a5957600080fd5b612a68848235602084016129a9565b949350505050565b600067ffffffffffffffff821115612a8a57612a8a61292b565b5060051b60200190565b60006020808385031215612aa757600080fd5b823567ffffffffffffffff811115612abe57600080fd5b8301601f81018513612acf57600080fd5b8035612ae2612add82612a70565b61295a565b81815260059190911b82018301908381019087831115612b0157600080fd5b928401925b82841015612b28578335612b19816128ec565b82529284019290840190612b06565b979650505050505050565b60008060408385031215612b4657600080fd5b50508035926020909101359150565b600082601f830112612b6657600080fd5b81356020612b76612add83612a70565b82815260059290921b84018101918181019086841115612b9557600080fd5b8286015b84811015612bb05780358352918301918301612b99565b509695505050505050565b60008060408385031215612bce57600080fd5b823567ffffffffffffffff80821115612be657600080fd5b818501915085601f830112612bfa57600080fd5b81356020612c0a612add83612a70565b82815260059290921b84018101918181019089841115612c2957600080fd5b948201945b83861015612c50578535612c41816128ec565b82529482019490820190612c2e565b96505086013592505080821115612c6657600080fd5b50612c7385828601612b55565b9150509250929050565b600080600060608486031215612c9257600080fd5b8335612c9d816128ec565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b838110156128ce57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101612cc6565b604081526000612d0b6040830185612cb2565b8281036020840152612d1d818561289e565b95945050505050565b60008060408385031215612d3957600080fd5b8235612d44816128ec565b946020939093013593505050565b60208152600061114a6020830184612cb2565b600080600060408486031215612d7a57600080fd5b8335612d85816128ec565b9250602084013567ffffffffffffffff80821115612da257600080fd5b818601915086601f830112612db657600080fd5b813581811115612dc557600080fd5b876020828501011115612dd757600080fd5b6020830194508093505050509250925092565b600080600060608486031215612dff57600080fd5b833592506020840135612e11816128ec565b929592945050506040919091013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008060408385031215612e6457600080fd5b505080516020909101519092909150565b600060208284031215612e8757600080fd5b815161114a816128ec565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ef957612ef9612e92565b500290565b600082612f34577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008219821115612f4c57612f4c612e92565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f8257612f82612e92565b5060010190565b600060208284031215612f9b57600080fd5b5051919050565b6000606082018583526020606081850152818651808452608086019150828801935060005b81811015612ff957845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101612fc7565b5050848103604086015261300d818761289e565b98975050505050505050565b60005b8381101561303457818101518382015260200161301c565b83811115613043576000848401525b50505050565b6000835161305b818460208801613019565b9190910191825250602001919050565b60008282101561307d5761307d612e92565b500390565b60008351613094818460208801613019565b8351908301906130a8818360208801613019565b01949350505050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516130eb816004850160208701613019565b91909101600401939250505056fe656970313936372e486f6c6f67726170682e524f59414c544945532e746f6b656e41646472657373656970313936372e486f6c6f67726170682e524f59414c544945532e7265636569766572a164736f6c634300080d000a";

type HolographRoyaltiesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HolographRoyaltiesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HolographRoyalties__factory extends ContractFactory {
  constructor(...args: HolographRoyaltiesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HolographRoyalties> {
    return super.deploy(overrides || {}) as Promise<HolographRoyalties>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HolographRoyalties {
    return super.attach(address) as HolographRoyalties;
  }
  override connect(signer: Signer): HolographRoyalties__factory {
    return super.connect(signer) as HolographRoyalties__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HolographRoyaltiesInterface {
    return new utils.Interface(_abi) as HolographRoyaltiesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HolographRoyalties {
    return new Contract(address, _abi, signerOrProvider) as HolographRoyalties;
  }
}
