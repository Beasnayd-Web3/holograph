/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Faucet, FaucetInterface } from "../../faucet/Faucet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "faucetCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucetDripAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getLastAccessTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "grantTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "grantTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initPayload",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAllowedToWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "setWithdrawAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_waitTimeSeconds",
        type: "uint256",
      },
    ],
    name: "setWithdrawCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract HolographERC20Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "withdrawAllTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountWei",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405268056bc75e2d631000006002556201518060035534801561002457600080fd5b50611080806100346000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637e36320b11610097578063b3d2b44111610066578063b3d2b44114610257578063c94e643c146100fa578063ceb04e291461026a578063fc0c546a1461027d57600080fd5b80637e36320b146101ed5780638da5cb5b146101f6578063905467f61461023b578063a878aee61461024457600080fd5b8063359cf2b7116100d3578063359cf2b71461014a57806336cec69b1461015257806344feed29146101965780634ddf47d4146101a957600080fd5b806306b091f9146100fa578063144fa6d71461010f5780632a4c80a414610122575b600080fd5b61010d610108366004610e58565b61029d565b005b61010d61011d366004610e84565b6104bf565b610135610130366004610e84565b610587565b60405190151581526020015b60405180910390f35b61010d610604565b610188610160366004610e84565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205490565b604051908152602001610141565b61010d6101a4366004610ea8565b610828565b6101bc6101b7366004610ef0565b6108ae565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610141565b61018860035481565b6000546102169073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610141565b61018860025481565b61010d610252366004610e84565b610a1a565b61010d610265366004610e84565b610bd0565b61010d610278366004610ea8565b610db0565b6001546102169073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b6001546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152829173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b59190610fbf565b101561041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742066756e64730000000000000000000000000000604482015260640161031a565b6001546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190610fd8565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161031a565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604081205481036105bb57506001919050565b60035473ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260409020546105ee9190610ffa565b42106105fc57506001919050565b506000919050565b61060d33610587565b610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f436f6d65206261636b206c617465720000000000000000000000000000000000604482015260640161031a565b6002546001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107089190610fbf565b1015610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f46617563657420697320656d7074790000000000000000000000000000000000604482015260640161031a565b3360008181526004602081905260409182902042905560015460025492517fa9059cbb00000000000000000000000000000000000000000000000000000000815291820193909352602481019190915273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303816000875af1158015610801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108259190610fd8565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161031a565b600355565b60006108d87f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b15610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f46617563657420636f6e747261637420697320616c726561647920696e69746960448201527f616c697a65640000000000000000000000000000000000000000000000000000606482015260840161031a565b6000808380602001905181019061097c9190611039565b6001805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178255600080549490931693169290921790557f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155507f4ddf47d4000000000000000000000000000000000000000000000000000000009392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161031a565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190610fbf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044015b6020604051808303816000875af1158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190610fd8565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161031a565b6002546001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce69190610fbf565b1015610d4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f46617563657420697320656d7074790000000000000000000000000000000000604482015260640161031a565b6001546002546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482019290925291169063a9059cbb90604401610b89565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161031a565b600255565b73ffffffffffffffffffffffffffffffffffffffff8116811461082557600080fd5b60008060408385031215610e6b57600080fd5b8235610e7681610e36565b946020939093013593505050565b600060208284031215610e9657600080fd5b8135610ea181610e36565b9392505050565b600060208284031215610eba57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610f0257600080fd5b813567ffffffffffffffff80821115610f1a57600080fd5b818401915084601f830112610f2e57600080fd5b813581811115610f4057610f40610ec1565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610f8657610f86610ec1565b81604052828152876020848701011115610f9f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610fd157600080fd5b5051919050565b600060208284031215610fea57600080fd5b81518015158114610ea157600080fd5b60008219821115611034577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000806040838503121561104c57600080fd5b825161105781610e36565b602084015190925061106881610e36565b80915050925092905056fea164736f6c634300080d000a";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
