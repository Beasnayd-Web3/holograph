/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockLZEndpoint,
  MockLZEndpointInterface,
} from "../../mock/MockLZEndpoint";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_destination",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "LzEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "adminCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "crossChainMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "dstConfigLookup",
    outputs: [
      {
        internalType: "uint128",
        name: "dstNativeAmtCap",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "baseGas",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "gasPerByte",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "dstPriceLookup",
    outputs: [
      {
        internalType: "uint128",
        name: "dstPriceRatio",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "dstGasPriceInWei",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "estimateFees",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zroFee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getAppConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "inboundProofLibraryVersion",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "inboundBlockConfirmations",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "outboundProofType",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "outboundBlockConfirmations",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address",
          },
        ],
        internalType: "struct LayerZeroOverrides.ApplicationConfiguration",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_destination",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50327f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955610a80806100436000396000f3fe6080604052600436106100bc5760003560e01c8063765a8a5411610074578063c58031001161004e578063c580310014610365578063e856753114610378578063f851a4401461039857600080fd5b8063765a8a5414610201578063a466222214610255578063bf64a82d1461035257600080fd5b80634afb422b116100a55780634afb422b146101775780636e9960c3146101ab578063704b6c02146101df57600080fd5b806323161ff8146100c157806340a7bb101461012f575b600080fd5b3480156100cd57600080fd5b506100f16100dc366004610686565b50670de0b6b3a76400009161c3509150601990565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff92831660208501529116908201526060015b60405180910390f35b34801561013b57600080fd5b5061016261014a366004610727565b5066038d7ea4c6800096629896809650945050505050565b60408051928352602083019190915201610126565b34801561018357600080fd5b50305b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610126565b3480156101b757600080fd5b507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c954610186565b3480156101eb57600080fd5b506101ff6101fa3660046107d4565b6103ad565b005b34801561020d57600080fd5b5061022c61021c3660046107f8565b506402540be40090633b9aca0090565b604080516fffffffffffffffffffffffffffffffff938416815292909116602083015201610126565b34801561026157600080fd5b506102d1610270366004610813565b50506040805160c08082018352600080835260208084018290528385018290526060808501839052608080860184905260a0958601849052865194850187528385529184018390523095840186905283018290528201529081019190915290565b6040516101269190600060c08201905061ffff808451168352602084015167ffffffffffffffff80821660208601526040860151915073ffffffffffffffffffffffffffffffffffffffff80831660408701528360608801511660608701528160808801511660808701528060a08801511660a08701525050505092915050565b6101ff61036036600461084a565b61048c565b6101ff61037336600461089f565b610567565b34801561038457600080fd5b506101ff610393366004610975565b6105b1565b3480156103a457600080fd5b50610186610640565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064015b60405180910390fd5b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e0000604482015260640161045f565b808260003760008082600034875af13d6000803e808015610562573d6000f35b3d6000fd5b7f138bae39f5887c9423d9c61fbf2cba537d68671ee69f2008423dbc28c8c41663898989898960405161059e959493929190610a1a565b60405180910390a1505050505050505050565b6040517f254e106200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063254e10629085906106079086908690600401610a57565b600060405180830381600088803b15801561062157600080fd5b5087f1158015610635573d6000803e3d6000fd5b505050505050505050565b600061066a7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95490565b905090565b803561ffff8116811461068157600080fd5b919050565b6000806040838503121561069957600080fd5b6106a28361066f565b91506106b06020840161066f565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146106db57600080fd5b50565b60008083601f8401126106f057600080fd5b50813567ffffffffffffffff81111561070857600080fd5b60208301915083602082850101111561072057600080fd5b9250929050565b600080600080600080600060a0888a03121561074257600080fd5b61074b8861066f565b9650602088013561075b816106b9565b9550604088013567ffffffffffffffff8082111561077857600080fd5b6107848b838c016106de565b909750955060608a01359150811515821461079e57600080fd5b909350608089013590808211156107b457600080fd5b506107c18a828b016106de565b989b979a50959850939692959293505050565b6000602082840312156107e657600080fd5b81356107f1816106b9565b9392505050565b60006020828403121561080a57600080fd5b6107f18261066f565b6000806040838503121561082657600080fd5b61082f8361066f565b9150602083013561083f816106b9565b809150509250929050565b60008060006040848603121561085f57600080fd5b833561086a816106b9565b9250602084013567ffffffffffffffff81111561088657600080fd5b610892868287016106de565b9497909650939450505050565b600080600080600080600080600060c08a8c0312156108bd57600080fd5b6108c68a61066f565b985060208a013567ffffffffffffffff808211156108e357600080fd5b6108ef8d838e016106de565b909a50985060408c013591508082111561090857600080fd5b6109148d838e016106de565b909850965060608c01359150610929826106b9565b90945060808b01359061093b826106b9565b90935060a08b0135908082111561095157600080fd5b5061095e8c828d016106de565b915080935050809150509295985092959850929598565b6000806000806060858703121561098b57600080fd5b8435610996816106b9565b935060208501359250604085013567ffffffffffffffff8111156109b957600080fd5b6109c5878288016106de565b95989497509550505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b61ffff86168152606060208201526000610a386060830186886109d1565b8281036040840152610a4b8185876109d1565b98975050505050505050565b602081526000610a6b6020830184866109d1565b94935050505056fea164736f6c634300080d000a";

type MockLZEndpointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLZEndpointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLZEndpoint__factory extends ContractFactory {
  constructor(...args: MockLZEndpointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockLZEndpoint> {
    return super.deploy(overrides || {}) as Promise<MockLZEndpoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockLZEndpoint {
    return super.attach(address) as MockLZEndpoint;
  }
  override connect(signer: Signer): MockLZEndpoint__factory {
    return super.connect(signer) as MockLZEndpoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLZEndpointInterface {
    return new utils.Interface(_abi) as MockLZEndpointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLZEndpoint {
    return new Contract(address, _abi, signerOrProvider) as MockLZEndpoint;
  }
}
