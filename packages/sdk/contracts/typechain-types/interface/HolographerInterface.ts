/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface HolographerInterfaceInterface extends utils.Interface {
  functions: {
    "getContractType()": FunctionFragment;
    "getDeploymentBlock()": FunctionFragment;
    "getHolograph()": FunctionFragment;
    "getHolographEnforcer()": FunctionFragment;
    "getOriginChain()": FunctionFragment;
    "getSourceContract()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getContractType"
      | "getDeploymentBlock"
      | "getHolograph"
      | "getHolographEnforcer"
      | "getOriginChain"
      | "getSourceContract"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getContractType",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDeploymentBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getHolograph",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getHolographEnforcer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOriginChain",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSourceContract",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getContractType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDeploymentBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHolograph",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHolographEnforcer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOriginChain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSourceContract",
    data: BytesLike
  ): Result;

  events: {};
}

export interface HolographerInterface extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: HolographerInterfaceInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getContractType(
      overrides?: CallOverrides
    ): Promise<[string] & { contractType: string }>;

    getDeploymentBlock(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { deploymentBlock: BigNumber }>;

    getHolograph(
      overrides?: CallOverrides
    ): Promise<[string] & { holograph: string }>;

    getHolographEnforcer(overrides?: CallOverrides): Promise<[string]>;

    getOriginChain(
      overrides?: CallOverrides
    ): Promise<[number] & { originChain: number }>;

    getSourceContract(
      overrides?: CallOverrides
    ): Promise<[string] & { sourceContract: string }>;
  };

  getContractType(overrides?: CallOverrides): Promise<string>;

  getDeploymentBlock(overrides?: CallOverrides): Promise<BigNumber>;

  getHolograph(overrides?: CallOverrides): Promise<string>;

  getHolographEnforcer(overrides?: CallOverrides): Promise<string>;

  getOriginChain(overrides?: CallOverrides): Promise<number>;

  getSourceContract(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    getContractType(overrides?: CallOverrides): Promise<string>;

    getDeploymentBlock(overrides?: CallOverrides): Promise<BigNumber>;

    getHolograph(overrides?: CallOverrides): Promise<string>;

    getHolographEnforcer(overrides?: CallOverrides): Promise<string>;

    getOriginChain(overrides?: CallOverrides): Promise<number>;

    getSourceContract(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    getContractType(overrides?: CallOverrides): Promise<BigNumber>;

    getDeploymentBlock(overrides?: CallOverrides): Promise<BigNumber>;

    getHolograph(overrides?: CallOverrides): Promise<BigNumber>;

    getHolographEnforcer(overrides?: CallOverrides): Promise<BigNumber>;

    getOriginChain(overrides?: CallOverrides): Promise<BigNumber>;

    getSourceContract(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getContractType(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getDeploymentBlock(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getHolograph(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getHolographEnforcer(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOriginChain(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getSourceContract(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
