import {Address} from 'abitype'
import {createPublicClient, http} from 'viem'
import {beforeAll, describe, expect, it} from 'vitest'

import {
  decodeAvailableOperatorJobEvent,
  decodeBridgeInArgs,
  decodeBridgeableContractDeployedEvent,
  decodeCrossChainMessageSentEvent,
  decodeDeploymentConfigInput,
  decodeERC721TransferEvent,
  decodeExecuteJobInput,
  decodeLzPacketEvent,
} from '../../utils/decoders'

require('dotenv').config()

const RPC_URL = process.env.ETHEREUM_RPC_URL || 'https://ethereum-rpc.publicnode.com'

describe('Utils: decoders', () => {
  let client

  beforeAll(() => {
    client = createPublicClient({transport: http(RPC_URL)})
  })

  it('decodeDeploymentConfigInput', async () => {
    const transaction = await client.getTransaction({
      hash: '0x98e2cd60caa333e7536591c3c7e2a5aa2c0f58f1d2652286680054b148a42c84',
    })

    const decodedConfig = decodeDeploymentConfigInput(transaction.input)
    const expectedDecodedConfig = {
      config: {
        contractType: '0x0000000000000000000000000000000000486f6c6f6772617068455243373231',
        chainType: 1,
        salt: '0x0000000000000000000000000000000000000000000000000000018fad993eef',
        byteCode:
          '0x608060405234801561001057600080fd5b50610b32806100206000396000f3fe6080604052600436106100695760003560e01c8063704b6c0211610043578063704b6c0214610166578063bf64a82d14610186578063f851a4401461019957610070565b806342809873146100a25780634ddf47d4146100e15780636e9960c31461013257610070565b3661007057005b600061007a6101ae565b90503660008037600080366000845af43d6000803e80801561009b573d6000f35b3d6000fd5b005b3480156100ae57600080fd5b506100b76101ae565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100ed57600080fd5b506101016100fc366004610845565b61028d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100d8565b34801561013e57600080fd5b507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c9546100b7565b34801561017257600080fd5b506100a06101813660046108ea565b6105a2565b6100a061019436600461090e565b61067c565b3480156101a557600080fd5b506100b7610752565b7fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e7547f0b671eb65810897366dd82c4cbb7d9dff8beda8484194956e81e89b8a361d9c7546040517fcc2913f900000000000000000000000000000000000000000000000000000000815260048101829052600092919073ffffffffffffffffffffffffffffffffffffffff83169063cc2913f990602401602060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610993565b9250505090565b60006102b77f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b15610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a20616c726561647920696e697469616c697a6564000060448201526064015b60405180910390fd5b60008060008480602001905181019061033c91906109e0565b925092509250827f0b671eb65810897366dd82c4cbb7d9dff8beda8484194956e81e89b8a361d9c755817fce8e75d5c5227ce29a4ee170160bb296e5dea6934b80a9bd723f7ef1e7c850e7556000806103936101ae565b73ffffffffffffffffffffffffffffffffffffffff16836040516024016103ba9190610a76565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f4ddf47d4000000000000000000000000000000000000000000000000000000001790525161043b9190610ac7565b600060405180830381855af49150503d8060008114610476576040519150601f19603f3d011682016040523d82523d6000602084013e61047b565b606091505b50915091506000818060200190518101906104969190610ae3565b90508280156104e657507fffffffff0000000000000000000000000000000000000000000000000000000081167f4ddf47d400000000000000000000000000000000000000000000000000000000145b61054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f696e697469616c697a6174696f6e206661696c65640000000000000000000000604482015260640161031a565b61057560017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d400000000000000000000000000000000000000000000000000000000979650505050505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e0000604482015260640161031a565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e0000604482015260640161031a565b808260003760008082600034875af13d6000803e80801561009b573d6000f35b600061077c7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95490565b905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107f7576107f7610781565b604052919050565b600067ffffffffffffffff82111561081957610819610781565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561085757600080fd5b813567ffffffffffffffff81111561086e57600080fd5b8201601f8101841361087f57600080fd5b803561089261088d826107ff565b6107b0565b8181528560208385010111156108a757600080fd5b81602084016020830137600091810160200191909152949350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146108e757600080fd5b50565b6000602082840312156108fc57600080fd5b8135610907816108c5565b9392505050565b60008060006040848603121561092357600080fd5b833561092e816108c5565b9250602084013567ffffffffffffffff8082111561094b57600080fd5b818601915086601f83011261095f57600080fd5b81358181111561096e57600080fd5b87602082850101111561098057600080fd5b6020830194508093505050509250925092565b6000602082840312156109a557600080fd5b8151610907816108c5565b60005b838110156109cb5781810151838201526020016109b3565b838111156109da576000848401525b50505050565b6000806000606084860312156109f557600080fd5b835192506020840151610a07816108c5565b604085015190925067ffffffffffffffff811115610a2457600080fd5b8401601f81018613610a3557600080fd5b8051610a4361088d826107ff565b818152876020838501011115610a5857600080fd5b610a698260208301602086016109b0565b8093505050509250925092565b6020815260008251806020840152610a958160408501602087016109b0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008251610ad98184602087016109b0565b9190910192915050565b600060208284031215610af557600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461090757600080fdfea164736f6c634300080d000a',
        initCode:
          '0x00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000854726970204172740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004544152540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000043786970455243373231000000000000000000000000c0768aa301fa733e45b2de64657f952407ec564b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000020000000000000000000000000ef532911656c39c6bc23fbabd05f816055949cf7',
      },
      signature: {
        r: '0x062d450a8b1e5a5d10550c039250423339831ca43c65c1c7a701dbfe8a552aa4',
        s: '0x4f29a8afb2aa35b4df03500eb0e0a418cb0b4c90a46bdd3be1b934782592d1a8',
        v: 27,
      },
      signer: '0xef532911656c39c6bc23fbabd05f816055949cf7',
    }

    expect(decodedConfig).toStrictEqual(expectedDecodedConfig)
  })

  it('decodeBridgeableContractDeployedEvent', async () => {
    const receipt = await client.getTransactionReceipt({
      hash: '0x66607b5e26951058df62e0c2ec1c37b003da9a28442e3df06f86be29c6aea80f',
    })

    const decodedEvent = decodeBridgeableContractDeployedEvent(receipt)

    const expectedDecodedEvent = [
      {
        logIndex: '158',
        values: [
          '0x287a5762cc1546eb8ec7c22365f9c705825c6c90',
          '0xd1ca825b7d80d74deba1b5e8ce449f8cbedf35f960b1f8a429785a3ee42c4814',
        ],
      },
    ]

    expect(expectedDecodedEvent).toStrictEqual(decodedEvent)
  })

  it('decodeERC721TransferEvent', async () => {
    const receipt = await client.getTransactionReceipt({
      hash: '0xa0a4357e3b534cadd35547aa48f1f996e11d3ba92ecc5e05c37046a3001f53cb',
    })

    const decodedEvent = decodeERC721TransferEvent(receipt)

    const expectedDecodedEvent = [
      {
        logIndex: '256',
        values: [
          '0x1fb3256adb743d35f86faa70e0c42f5a285997a7',
          '0xfe977e8fceb9c976b735eb66475c8babcc67e397',
          '0x0000000100000000000000000000000000000000000000000000000000000032',
        ],
      },
    ]

    expect(expectedDecodedEvent).toStrictEqual(decodedEvent)
  })

  it('decodeCrossChainMessageSentEvent', async () => {
    const receipt = await client.getTransactionReceipt({
      hash: '0xd8c2195396d55f200179904842df611f1f41809092416b29cb3c1e38a3abfd86',
    })

    const decodedEvent = decodeCrossChainMessageSentEvent(receipt)

    const expectedDecodedEvent = [
      {
        logIndex: '162',
        values: ['0x7181f9fc1ba1611b986b3abedc6985b51e32d204fbdec9c8dfae17a7528a1ecf'],
      },
    ]

    expect(expectedDecodedEvent).toStrictEqual(decodedEvent)
  })

  it('decodeAvailableOperatorJobEvent', async () => {
    const receipt = await client.getTransactionReceipt({
      hash: '0x80c6a44689769e0f859b6bd5c71e1ebfa3e1105a38f3f3620c5f41e700814e73',
    })

    const decodedEvent = decodeAvailableOperatorJobEvent(receipt)

    const expectedDecodedEvent = [
      {
        logIndex: '385',
        values: [
          '0x3f9c5cc110c558a92c8fcd807deccaa8d15b4a83baf326f760de093728916571',
          '0x16f1be700000000000000000000000000000000000000000000000000000000000000b64000000000000000000000000000000000000000000000000000000000000004a000000000000000000000000740df024ce73f589acd5e8756b377ef8c6558bab000000000000000000000000614dca9ace2cea0a89320b0c8c43549848498bd6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000302e59c390324808d0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000c0ffee78121f208475abdd2cf0853a7afed64749000000000000000000000000ff8c8747ab44f5bdaeb0520525bbada166e8a8b00000000000000000000000000000000000000000033b2e3c9fd0803ce80000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000249f000000000000000000000000000000000000000000000000000000009502f9001',
        ],
      },
    ]

    expect(expectedDecodedEvent).toStrictEqual(decodedEvent)
  })

  it('decodeLzPacketEvent', async () => {
    const messagingModuleAddresses: Address = '0x7969414aa6958a44e276e9c3c5f28c5bc42e0271'
    const receipt = await client.getTransactionReceipt({
      hash: '0xd8c2195396d55f200179904842df611f1f41809092416b29cb3c1e38a3abfd86',
    })

    const decodedEvent = decodeLzPacketEvent(receipt, messagingModuleAddresses)

    const expectedDecodedEvent = [
      {
        logIndex: '161',
        values: [
          '0x16f1be70000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006b3498725726c1d5925015cf19bd79a22c55b33000000000000000000000000082904fa267ec9588e5cd5a91ec28ea11ea69182f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021297afc7cb8b0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000868c218c46db69a34eb0610e135a1057f908a26e000000000000000000000000868c218c46db69a34eb0610e135a1057f908a26e00000000000000000000000000000000000000000000000002100e151e2290d0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077740000000000000000000000000000000000000000000000000000000010c388d07',
        ],
      },
    ]

    expect(expectedDecodedEvent).toStrictEqual(decodedEvent)
  })

  it('decodeBridgeInArgs', () => {
    const bridgeInPayload =
      '0x000000000000000000000000790a6c3c8f66bf7b10ef183eb587842c12b3af7c000000000000000000000000790a6c3c8f66bf7b10ef183eb587842c12b3af7c00000006000000000000000000000000000000000000000000000000000003ab00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000'

    const expectedDecodedvalue = {
      from: '0x790a6c3c8f66bf7b10ef183eb587842c12b3af7c',
      to: '0x790a6c3c8f66bf7b10ef183eb587842c12b3af7c',
      amount_or_tokenId: '0x00000006000000000000000000000000000000000000000000000000000003ab',
      data: '0x',
    }

    const decodedValue = decodeBridgeInArgs(bridgeInPayload, true)

    expect(decodedValue).toStrictEqual(expectedDecodedvalue)
  })

  it('decodeExecuteJobInput', () => {
    const expectedDecodedValue = {
      functionSelector: '0x16f1be70',
      bridgeInRequestArgs: {
        nonce: 36738n,
        fromChain: 76,
        holographableContract: '0x0cf07814b1e1373fbe6e9386a6c9de8256bc7c81',
        hToken: '0x82904fa267ec9588e5cd5a91ec28ea11ea69182f',
        hTokenRecipient: '0x0000000000000000000000000000000000000000',
        hTokenFeeValue: 43222080005042576n,
        doNotRevert: true,
        bridgeInPayload: {
          from: '0x790a6c3c8f66bf7b10ef183eb587842c12b3af7c',
          to: '0x790a6c3c8f66bf7b10ef183eb587842c12b3af7c',
          amount_or_tokenId: '0x00000006000000000000000000000000000000000000000000000000000003ab',
          data: '0x',
        },
      },
      gasLimit: 489280n,
      gasPrice: 60000000007n,
    }

    const decodedValue = decodeExecuteJobInput(
      '0x16f1be700000000000000000000000000000000000000000000000000000000000008f82000000000000000000000000000000000000000000000000000000000000004c0000000000000000000000000cf07814b1e1373fbe6e9386a6c9de8256bc7c8100000000000000000000000082904fa267ec9588e5cd5a91ec28ea11ea69182f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000998e40b52771900000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000790a6c3c8f66bf7b10ef183eb587842c12b3af7c000000000000000000000000790a6c3c8f66bf7b10ef183eb587842c12b3af7c00000006000000000000000000000000000000000000000000000000000003ab0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777400000000000000000000000000000000000000000000000000000000df8475807',
      true,
    )

    expect(decodedValue).toStrictEqual(expectedDecodedValue)
  })
})
