/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  HolographRegistry,
  HolographRegistryInterface,
} from "../HolographRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_holographableContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "HolographableContractEvent",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "adminCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractType",
        type: "bytes32",
      },
    ],
    name: "getContractTypeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
    ],
    name: "getHToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHolograph",
    outputs: [
      {
        internalType: "address",
        name: "holograph",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getHolographableContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "contracts",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHolographableContractsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "getHolographedHashAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractType",
        type: "bytes32",
      },
    ],
    name: "getReservedContractTypeAddress",
    outputs: [
      {
        internalType: "address",
        name: "contractTypeAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUtilityToken",
    outputs: [
      {
        internalType: "address",
        name: "utilityToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "holographableEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initPayload",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "smartContract",
        type: "address",
      },
    ],
    name: "isHolographedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isHolographedHashDeployed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "referenceContractTypeAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setContractTypeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "hToken",
        type: "address",
      },
    ],
    name: "setHToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holograph",
        type: "address",
      },
    ],
    name: "setHolograph",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setHolographedHashAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "reserved",
        type: "bool",
      },
    ],
    name: "setReservedContractTypeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "reserved",
        type: "bool[]",
      },
    ],
    name: "setReservedContractTypeAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "utilityToken",
        type: "address",
      },
    ],
    name: "setUtilityToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c13806100206000396000f3fe60806040526004361061018e5760003560e01c8063704b6c02116100d6578063949d53a71161007f578063cc2913f911610059578063cc2913f914610555578063d163678214610598578063f851a440146105db57600080fd5b8063949d53a7146104d9578063afa5886e14610522578063bf64a82d1461054257600080fd5b80637674a6ec116100b05780637674a6ec14610479578063768797c3146104995780639013ae08146104b957600080fd5b8063704b6c0214610419578063725229f61461043957806374b7510c1461045957600080fd5b806343e451bc116101385780634ddf47d4116101125780634ddf47d41461037457806356116d54146103c55780636e9960c3146103e557600080fd5b806343e451bc146102da57806344b25fff146102fa5780634827ae0c1461034057600080fd5b806325d5cac81161016957806325d5cac81461027957806335ee77cf1461029b57806340ad4fa9146102bb57600080fd5b80626266791461019d57806321ad2353146101f757806324299c6e1461022457600080fd5b3661019857600080fd5b600080fd5b3480156101a957600080fd5b507fbf76518d46db472b71aa7677a0908b8016f3dee568415ffa24055f9a670f9c37545b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561020357600080fd5b50610217610212366004611598565b6105f0565b6040516101ee91906115ba565b34801561023057600080fd5b5061026961023f366004611614565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b60405190151581526020016101ee565b34801561028557600080fd5b50610299610294366004611652565b6106fc565b005b3480156102a757600080fd5b506102996102b636600461168a565b6107db565b3480156102c757600080fd5b506000545b6040519081526020016101ee565b3480156102e657600080fd5b506102996102f536600461170d565b6108ec565b34801561030657600080fd5b50610269610315366004611652565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205460ff1690565b34801561034c57600080fd5b507fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a546101cd565b34801561038057600080fd5b5061039461038f3660046117f7565b610a30565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101ee565b3480156103d157600080fd5b506102996103e03660046118aa565b610bd9565b3480156103f157600080fd5b507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c9546101cd565b34801561042557600080fd5b50610299610434366004611652565b610d5a565b34801561044557600080fd5b506102996104543660046118aa565b610e34565b34801561046557600080fd5b506101cd610474366004611614565b61101c565b34801561048557600080fd5b506102996104943660046118df565b61105f565b3480156104a557600080fd5b506102cc6104b4366004611652565b611153565b3480156104c557600080fd5b506102996104d4366004611652565b611347565b3480156104e557600080fd5b506101cd6104f436600461190b565b63ffffffff1660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b34801561052e57600080fd5b5061029961053d366004611968565b611421565b6102996105503660046119aa565b61148e565b34801561056157600080fd5b506101cd610570366004611614565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b3480156105a457600080fd5b506101cd6105b3366004611614565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b3480156105e757600080fd5b506101cd611569565b600054606090806106018486611a2e565b1115610614576106118482611a46565b92505b8267ffffffffffffffff81111561062d5761062d611779565b604051908082528060200260200182016040528015610656578160200160208202803683370190505b50915060005b838110156106f45760006106708287611a2e565b8154811061068057610680611a5d565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168382815181106106bd576106bd611a5d565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152806106ec81611a8c565b91505061065c565b505092915050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064015b60405180910390fd5b7fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a55565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107ae565b63ffffffff91909116600090815260056020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107ae565b60005b83811015610a29578282828181106109bf576109bf611a5d565b90506020020160208101906109d49190611ac4565b600360008787858181106109ea576109ea611a5d565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610a2190611a8c565b9150506109a5565b5050505050565b6000610a5a7f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b15610ac1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a20616c726561647920696e697469616c697a6564000060448201526064016107ae565b60008083806020019051810190610ad89190611adf565b91509150327f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955817fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a5560005b8151811015610b8657600160036000848481518110610b4657610b46611a5d565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610b7e90611a8c565b915050610b25565b50610bb060017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d4000000000000000000000000000000000000000000000000000000009392505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107ae565b60008281526003602052604090205460ff16610d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f484f4c4f47524150483a206e6f7420726573657276656420747970650000000060448201526064016107ae565b60009182526002602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107ae565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955565b60007fb4107f746e9496e8452accc7de63d1c5e14c19f510932daa04077cd49e8bd77a5490508073ffffffffffffffffffffffffffffffffffffffff166388cc58e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec99190611b9c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f484f4c4f47524150483a20666163746f7279206f6e6c792066756e6374696f6e60448201526064016107ae565b506000918252600160208181526040808520805473ffffffffffffffffffffffffffffffffffffffff9095167fffffffffffffffffffffffff000000000000000000000000000000000000000095861681179091558086526004909252842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683179055835491820184559280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180549091169091179055565b60008181526003602052604081205460ff161561105a575060008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff165b919050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107ae565b60009182526003602052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000813f801580159061118657507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708114155b6111ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f484f4c4f47524150483a20656d70747920636f6e74726163740000000000000060448201526064016107ae565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f484f4c4f47524150483a20636f6e747261637420616c7265616479207365740060448201526064016107ae565b60008181526003602052604090205460ff16156112f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f484f4c4f47524150483a2072657365727665642061646472657373207479706560448201526064016107ae565b600081815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94909416939093179092555090565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107ae565b7fbf76518d46db472b71aa7677a0908b8016f3dee568415ffa24055f9a670f9c3755565b3360009081526004602052604090205460ff161561148a573373ffffffffffffffffffffffffffffffffffffffff167fb4d3a3f85e85fdbd1d39f939d8c75355ec33ef437522432fe1a7b8b20bb4fab48383604051611481929190611bb9565b60405180910390a25b5050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107ae565b808260003760008082600034875af13d6000803e808015611564573d6000f35b3d6000fd5b60006115937f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95490565b905090565b600080604083850312156115ab57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561160857835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016115d6565b50909695505050505050565b60006020828403121561162657600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461164f57600080fd5b50565b60006020828403121561166457600080fd5b813561166f8161162d565b9392505050565b803563ffffffff8116811461105a57600080fd5b6000806040838503121561169d57600080fd5b6116a683611676565b915060208301356116b68161162d565b809150509250929050565b60008083601f8401126116d357600080fd5b50813567ffffffffffffffff8111156116eb57600080fd5b6020830191508360208260051b850101111561170657600080fd5b9250929050565b6000806000806040858703121561172357600080fd5b843567ffffffffffffffff8082111561173b57600080fd5b611747888389016116c1565b9096509450602087013591508082111561176057600080fd5b5061176d878288016116c1565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117ef576117ef611779565b604052919050565b6000602080838503121561180a57600080fd5b823567ffffffffffffffff8082111561182257600080fd5b818501915085601f83011261183657600080fd5b81358181111561184857611848611779565b611878847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016117a8565b9150808252868482850101111561188e57600080fd5b8084840185840137600090820190930192909252509392505050565b600080604083850312156118bd57600080fd5b8235915060208301356116b68161162d565b8035801515811461105a57600080fd5b600080604083850312156118f257600080fd5b82359150611902602084016118cf565b90509250929050565b60006020828403121561191d57600080fd5b61166f82611676565b60008083601f84011261193857600080fd5b50813567ffffffffffffffff81111561195057600080fd5b60208301915083602082850101111561170657600080fd5b6000806020838503121561197b57600080fd5b823567ffffffffffffffff81111561199257600080fd5b61199e85828601611926565b90969095509350505050565b6000806000604084860312156119bf57600080fd5b83356119ca8161162d565b9250602084013567ffffffffffffffff8111156119e657600080fd5b6119f286828701611926565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611a4157611a416119ff565b500190565b600082821015611a5857611a586119ff565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611abd57611abd6119ff565b5060010190565b600060208284031215611ad657600080fd5b61166f826118cf565b60008060408385031215611af257600080fd5b8251611afd8161162d565b8092505060208084015167ffffffffffffffff80821115611b1d57600080fd5b818601915086601f830112611b3157600080fd5b815181811115611b4357611b43611779565b8060051b9150611b548483016117a8565b8181529183018401918481019089841115611b6e57600080fd5b938501935b83851015611b8c57845182529385019390850190611b73565b8096505050505050509250929050565b600060208284031215611bae57600080fd5b815161166f8161162d565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010191905056fea164736f6c634300080d000a";

type HolographRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HolographRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HolographRegistry__factory extends ContractFactory {
  constructor(...args: HolographRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HolographRegistry> {
    return super.deploy(overrides || {}) as Promise<HolographRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HolographRegistry {
    return super.attach(address) as HolographRegistry;
  }
  override connect(signer: Signer): HolographRegistry__factory {
    return super.connect(signer) as HolographRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HolographRegistryInterface {
    return new utils.Interface(_abi) as HolographRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HolographRegistry {
    return new Contract(address, _abi, signerOrProvider) as HolographRegistry;
  }
}
