/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DropsMetadataRenderer,
  DropsMetadataRendererInterface,
} from "../../../drops/metadata/DropsMetadataRenderer";

const _abi = [
  {
    inputs: [],
    name: "Access_OnlyAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "MetadataFrozen",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataBase",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataExtension",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "freezeAt",
        type: "uint256",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "provenanceHash",
        type: "bytes32",
      },
    ],
    name: "ProvenanceHashUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeWithData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "metadataBaseByContract",
    outputs: [
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
      {
        internalType: "string",
        name: "extension",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "freezeAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "provenanceHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
      {
        internalType: "string",
        name: "newContractUri",
        type: "string",
      },
    ],
    name: "updateMetadataBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataBase",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataExtension",
        type: "string",
      },
      {
        internalType: "string",
        name: "newContractURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "freezeAt",
        type: "uint256",
      },
    ],
    name: "updateMetadataBaseWithDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "provenanceHash",
        type: "bytes32",
      },
    ],
    name: "updateProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611387806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063af806d5611610076578063cc1306db1161005b578063cc1306db1461018f578063de5af49b146101a2578063e8a3d485146101d057600080fd5b8063af806d561461015c578063c87b56dd1461016f57600080fd5b806342495a95146100a85780634ddf47d4146100bd578063856a7ffa1461012657806391074f9814610139575b600080fd5b6100bb6100b6366004610e6d565b6101d8565b005b6100f06100cb366004610f0e565b507f4ddf47d40000000000000000000000000000000000000000000000000000000090565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6100bb610134366004610f0e565b6102d6565b61014c610147366004610f57565b610313565b60405161011d9493929190610fe8565b6100bb61016a366004611033565b6104d3565b61018261017d3660046110a7565b6105df565b60405161011d91906110c0565b6100bb61019d3660046110d3565b610808565b6101c26101b0366004610f57565b60016020526000908152604090205481565b60405190815260200161011d565b610182610958565b8473ffffffffffffffffffffffffffffffffffffffff8116331480159061028a57506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa158015610264573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028891906110fd565b155b156102c1576040517f02bd6bd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ce8686868686610a0d565b505050505050565b600080828060200190518101906102ed9190611164565b9150915061030e338360405180602001604052806000815250846000610a0d565b505050565b60006020819052908152604090208054819061032e906111c8565b80601f016020809104026020016040519081016040528092919081815260200182805461035a906111c8565b80156103a75780601f1061037c576101008083540402835291602001916103a7565b820191906000526020600020905b81548152906001019060200180831161038a57829003601f168201915b5050505050908060010180546103bc906111c8565b80601f01602080910402602001604051908101604052809291908181526020018280546103e8906111c8565b80156104355780601f1061040a57610100808354040283529160200191610435565b820191906000526020600020905b81548152906001019060200180831161041857829003601f168201915b50505050509080600201805461044a906111c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610476906111c8565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b5050505050908060030154905084565b8273ffffffffffffffffffffffffffffffffffffffff8116331480159061058557506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa15801561055f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058391906110fd565b155b156105bc576040517f02bd6bd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105d9848460405180602001604052806000815250856000610a0d565b50505050565b3360009081526020819052604080822081516080810190925280546060939291908290829061060d906111c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610639906111c8565b80156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b5050505050815260200160018201805461069f906111c8565b80601f01602080910402602001604051908101604052809291908181526020018280546106cb906111c8565b80156107185780601f106106ed57610100808354040283529160200191610718565b820191906000526020600020905b8154815290600101906020018083116106fb57829003601f168201915b50505050508152602001600282018054610731906111c8565b80601f016020809104026020016040519081016040528092919081815260200182805461075d906111c8565b80156107aa5780601f1061077f576101008083540402835291602001916107aa565b820191906000526020600020905b81548152906001019060200180831161078d57829003601f168201915b5050505050815260200160038201548152505090508060000151516000036107d157600080fd5b80516107dc84610b4a565b6020808401516040516107f19493920161121b565b604051602081830303815290604052915050919050565b8173ffffffffffffffffffffffffffffffffffffffff811633148015906108ba57506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b891906110fd565b155b156108f1576040517f02bd6bd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660008181526001602052604090819020849055517ff2e078c4022bfd6c56addd06540a4a5dd4252b6b2c424b6840c184063f48fc279061094b9085815260200190565b60405180910390a2505050565b3360009081526020819052604081206002018054606092919061097a906111c8565b80601f01602080910402602001604051908101604052809291908181526020018280546109a6906111c8565b80156109f35780601f106109c8576101008083540402835291602001916109f3565b820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b505050505090508051600003610a0857600080fd5b919050565b8015801590610a1b57504281115b15610a52576040517feef043fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160808101825285815260208082018690528183018590526060820184905273ffffffffffffffffffffffffffffffffffffffff88166000908152808252929092208151805192939192610aac9284920190610c87565b506020828101518051610ac59260018501920190610c87565b5060408201518051610ae1916002840191602090910190610c87565b50606082015181600301559050508473ffffffffffffffffffffffffffffffffffffffff167f5eff125d5659803f33dbda215d6e8bfe0a404fd213a9ecb5e61973ee16cb17e785858585604051610b3b9493929190610fe8565b60405180910390a25050505050565b606081600003610b8d57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610bb75780610ba18161128d565b9150610bb09050600a836112f4565b9150610b91565b60008167ffffffffffffffff811115610bd257610bd2610d44565b6040519080825280601f01601f191660200182016040528015610bfc576020820181803683370190505b5090505b8415610c7f57610c11600183611308565b9150610c1e600a8661131f565b610c29906030611333565b60f81b818381518110610c3e57610c3e61134b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610c78600a866112f4565b9450610c00565b949350505050565b828054610c93906111c8565b90600052602060002090601f016020900481019282610cb55760008555610cfb565b82601f10610cce57805160ff1916838001178555610cfb565b82800160010185558215610cfb579182015b82811115610cfb578251825591602001919060010190610ce0565b50610d07929150610d0b565b5090565b5b80821115610d075760008155600101610d0c565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a0857600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610dba57610dba610d44565b604052919050565b600067ffffffffffffffff821115610ddc57610ddc610d44565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000610e1b610e1684610dc2565b610d73565b9050828152838383011115610e2f57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610e5757600080fd5b610e6683833560208501610e08565b9392505050565b600080600080600060a08688031215610e8557600080fd5b610e8e86610d20565b9450602086013567ffffffffffffffff80821115610eab57600080fd5b610eb789838a01610e46565b95506040880135915080821115610ecd57600080fd5b610ed989838a01610e46565b94506060880135915080821115610eef57600080fd5b50610efc88828901610e46565b95989497509295608001359392505050565b600060208284031215610f2057600080fd5b813567ffffffffffffffff811115610f3757600080fd5b8201601f81018413610f4857600080fd5b610c7f84823560208401610e08565b600060208284031215610f6957600080fd5b610e6682610d20565b60005b83811015610f8d578181015183820152602001610f75565b838111156105d95750506000910152565b60008151808452610fb6816020860160208601610f72565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b608081526000610ffb6080830187610f9e565b828103602084015261100d8187610f9e565b905082810360408401526110218186610f9e565b91505082606083015295945050505050565b60008060006060848603121561104857600080fd5b61105184610d20565b9250602084013567ffffffffffffffff8082111561106e57600080fd5b61107a87838801610e46565b9350604086013591508082111561109057600080fd5b5061109d86828701610e46565b9150509250925092565b6000602082840312156110b957600080fd5b5035919050565b602081526000610e666020830184610f9e565b600080604083850312156110e657600080fd5b6110ef83610d20565b946020939093013593505050565b60006020828403121561110f57600080fd5b81518015158114610e6657600080fd5b600082601f83011261113057600080fd5b815161113e610e1682610dc2565b81815284602083860101111561115357600080fd5b610c7f826020830160208701610f72565b6000806040838503121561117757600080fd5b825167ffffffffffffffff8082111561118f57600080fd5b61119b8683870161111f565b935060208501519150808211156111b157600080fd5b506111be8582860161111f565b9150509250929050565b600181811c908216806111dc57607f821691505b602082108103611215577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000845161122d818460208901610f72565b845190830190611241818360208901610f72565b8451910190611254818360208801610f72565b0195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112be576112be61125e565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611303576113036112c5565b500490565b60008282101561131a5761131a61125e565b500390565b60008261132e5761132e6112c5565b500690565b600082198211156113465761134661125e565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080d000a";

type DropsMetadataRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropsMetadataRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropsMetadataRenderer__factory extends ContractFactory {
  constructor(...args: DropsMetadataRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DropsMetadataRenderer> {
    return super.deploy(overrides || {}) as Promise<DropsMetadataRenderer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropsMetadataRenderer {
    return super.attach(address) as DropsMetadataRenderer;
  }
  override connect(signer: Signer): DropsMetadataRenderer__factory {
    return super.connect(signer) as DropsMetadataRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropsMetadataRendererInterface {
    return new utils.Interface(_abi) as DropsMetadataRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropsMetadataRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DropsMetadataRenderer;
  }
}
