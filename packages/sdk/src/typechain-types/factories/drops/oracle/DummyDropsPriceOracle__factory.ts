/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyDropsPriceOracle,
  DummyDropsPriceOracleInterface,
} from "../../../drops/oracle/DummyDropsPriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "adminCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdAmount",
        type: "uint256",
      },
    ],
    name: "convertUsdToWei",
    outputs: [
      {
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107ac806100206000396000f3fe6080604052600436106100655760003560e01c8063bf64a82d11610043578063bf64a82d14610137578063f5d781611461014a578063f851a4401461017857600080fd5b80634ddf47d41461006a5780636e9960c3146100c0578063704b6c0214610115575b600080fd5b34801561007657600080fd5b5061008a610085366004610513565b61018d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b3480156100cc57600080fd5b507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c9545b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b34801561012157600080fd5b5061013561013036600461060b565b610296565b005b61013561014536600461062d565b610370565b34801561015657600080fd5b5061016a6101653660046106b0565b61044b565b6040519081526020016100b7565b34801561018457600080fd5b506100f06104b5565b60006101b77f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b15610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a20616c726561647920696e697469616c697a6564000060448201526064015b60405180910390fd5b327f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95561026f60017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d400000000000000000000000000000000000000000000000000000000919050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e0000604482015260640161021a565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e0000604482015260640161021a565b808260003760008082600034875af13d6000803e808015610446573d6000f35b3d6000fd5b60006901be8f15b274c015a1cc650cf57798cfea81818461046c87846106f8565b610478906103e86106f8565b905060006104868884610735565b610492906103e56106f8565b905061049e818361074c565b6104a9906001610787565b98975050505050505050565b60006104df7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95490565b905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561052557600080fd5b813567ffffffffffffffff8082111561053d57600080fd5b818401915084601f83011261055157600080fd5b813581811115610563576105636104e4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105a9576105a96104e4565b816040528281528760208487010111156105c257600080fd5b826020860160208301376000928101602001929092525095945050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461060657600080fd5b919050565b60006020828403121561061d57600080fd5b610626826105e2565b9392505050565b60008060006040848603121561064257600080fd5b61064b846105e2565b9250602084013567ffffffffffffffff8082111561066857600080fd5b818601915086601f83011261067c57600080fd5b81358181111561068b57600080fd5b87602082850101111561069d57600080fd5b6020830194508093505050509250925092565b6000602082840312156106c257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610730576107306106c9565b500290565b600082821015610747576107476106c9565b500390565b600082610782577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000821982111561079a5761079a6106c9565b50019056fea164736f6c634300080d000a";

type DummyDropsPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyDropsPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyDropsPriceOracle__factory extends ContractFactory {
  constructor(...args: DummyDropsPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyDropsPriceOracle> {
    return super.deploy(overrides || {}) as Promise<DummyDropsPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DummyDropsPriceOracle {
    return super.attach(address) as DummyDropsPriceOracle;
  }
  override connect(signer: Signer): DummyDropsPriceOracle__factory {
    return super.connect(signer) as DummyDropsPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyDropsPriceOracleInterface {
    return new utils.Interface(_abi) as DummyDropsPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyDropsPriceOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DummyDropsPriceOracle;
  }
}
