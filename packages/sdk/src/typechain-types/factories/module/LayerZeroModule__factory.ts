/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LayerZeroModule,
  LayerZeroModuleInterface,
} from "../../module/LayerZeroModule";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "adminCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBridge",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
    ],
    name: "getGasParameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgBaseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "msgGasPerByte",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jobBaseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jobGasPerByte",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minGasPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GasParameters",
        name: "gasParameters",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "toChain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "crossChainPayload",
        type: "bytes",
      },
    ],
    name: "getHlgFee",
    outputs: [
      {
        internalType: "uint256",
        name: "hlgFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterfaces",
    outputs: [
      {
        internalType: "address",
        name: "interfaces",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLZEndpoint",
    outputs: [
      {
        internalType: "address",
        name: "lZEndpoint",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "toChain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "crossChainPayload",
        type: "bytes",
      },
    ],
    name: "getMessageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "hlgFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "msgFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dstGasPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOptimismGasPriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "optimismGasPriceOracle",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initPayload",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_srcAddress",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "toChain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "crossChainPayload",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "chainIds",
        type: "uint32[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "msgBaseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "msgGasPerByte",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jobBaseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jobGasPerByte",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minGasPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GasParameters[]",
        name: "gasParameters",
        type: "tuple[]",
      },
    ],
    name: "setGasParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "msgBaseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "msgGasPerByte",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jobBaseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jobGasPerByte",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minGasPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct GasParameters",
        name: "gasParameters",
        type: "tuple",
      },
    ],
    name: "setGasParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "interfaces",
        type: "address",
      },
    ],
    name: "setInterfaces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lZEndpoint",
        type: "address",
      },
    ],
    name: "setLZEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optimismGasPriceOracle",
        type: "address",
      },
    ],
    name: "setOptimismGasPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612d47806100206000396000f3fe6080604052600436106101785760003560e01c80638dd14802116100cb578063da8292d91161007f578063f0478d2011610059578063f0478d20146104d7578063f851a4401461050b578063ff1370d91461052057600080fd5b8063da8292d91461044f578063e7f43c681461046f578063ebac15f9146104a357600080fd5b80639ce82792116100b05780639ce82792146103fc578063b3ab15fb1461041c578063bf64a82d1461043c57600080fd5b80638dd14802146103bc578063960a4270146103dc57600080fd5b80634b40f1bf1161012d5780636ec7fad7116101075780636ec7fad714610302578063704b6c021461036e5780638c19a89f1461038e57600080fd5b80634b40f1bf1461025d5780634ddf47d41461027d5780636e9960c3146102ce57600080fd5b80630e95b6501161015e5780630e95b650146101af5780630fffbaf3146101cf57806336c5ab401461022957600080fd5b80621d3567146101875780630a0542ef1461019c57600080fd5b3661018257600080fd5b600080fd5b61019a610195366004612102565b61055b565b005b61019a6101aa3660046121cd565b610731565b3480156101bb57600080fd5b5061019a6101ca3660046123eb565b6109f7565b3480156101db57600080fd5b507feb87cbb21687feb327e3d58c6c16d552231d12c7a0e8115042a4165fac8a77f9545b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561023557600080fd5b507f56825e447adf54cdde5f04815fcf9b1dd26ef9d5c053625147c18b7c13091686546101ff565b34801561026957600080fd5b5061019a6102783660046124ad565b610b77565b34801561028957600080fd5b5061029d6102983660046124d1565b610c51565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610220565b3480156102da57600080fd5b507f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c9546101ff565b34801561030e57600080fd5b5061032261031d366004612584565b610eaf565b6040516102209190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b34801561037a57600080fd5b5061019a6103893660046124ad565b610ef7565b34801561039a57600080fd5b506103ae6103a93660046125a1565b610fd1565b604051908152602001610220565b3480156103c857600080fd5b5061019a6103d73660046124ad565b61134c565b3480156103e857600080fd5b5061019a6103f736600461260b565b611426565b34801561040857600080fd5b5061019a6104173660046124ad565b6114ea565b34801561042857600080fd5b5061019a6104373660046124ad565b6115c4565b61019a61044a366004612641565b61169e565b34801561045b57600080fd5b5061019a61046a3660046124ad565b611780565b34801561047b57600080fd5b507f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f546101ff565b3480156104af57600080fd5b507fbd3084b8c09da87ad159c247a60e209784196be2530cecbbd8f337fdd1848827546101ff565b3480156104e357600080fd5b507f46043c284a96474ab4a54c741ea0d0fce54e98eea878b99d4b85808fa6f71a5f546101ff565b34801561051757600080fd5b506101ff61185a565b34801561052c57600080fd5b5061054061053b3660046125a1565b611889565b60408051938452602084019290925290820152606001610220565b7f56825e447adf54cdde5f04815fcf9b1dd26ef9d5c053625147c18b7c13091686543314806105f5577f08c379a0000000000000000000000000000000000000000000000000000000006080527c200000000000000000000000000000000000000000000000000000000060a0527c1b484f4c4f47524150483a204c5a206f6e6c7920656e64706f696e740060c052600060e05260c46080fd5b506040518486600c8301378051301480610699577f08c379a0000000000000000000000000000000000000000000000000000000006080527c200000000000000000000000000000000000000000000000000000000060a0527c1e484f4c4f47524150483a20756e617574686f72697a65642073656e6460c0527f657200000000000000000000000000000000000000000000000000000000000060e05260c46080fd5b50507f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f5473ffffffffffffffffffffffffffffffffffffffff1663254e106283836040518363ffffffff1660e01b81526004016106f79291906126df565b600060405180830381600087803b15801561071157600080fd5b505af1158015610725573d6000803e3d6000fd5b50505050505050505050565b7f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f5473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f484f4c4f47524150483a206f70657261746f72206f6e6c792063616c6c00000060448201526064015b60405180910390fd5b7f56825e447adf54cdde5f04815fcf9b1dd26ef9d5c053625147c18b7c1309168654600061081987611d55565b90508173ffffffffffffffffffffffffffffffffffffffff1663c5803100866108607fbd3084b8c09da87ad159c247a60e209784196be2530cecbbd8f337fdd18488275490565b73ffffffffffffffffffffffffffffffffffffffff166320fc06ea60028c63ffffffff1660036040518463ffffffff1660e01b81526004016108a493929190612736565b602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190612757565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b1660208201819052603482015260480160405160208183030381529060405288888c3060018a602001518e8e9050610945919061279f565b8b5161095191906127dc565b60405160f09290921b7fffff00000000000000000000000000000000000000000000000000000000000016602083015260228201526042016040516020818303038152906040526040518963ffffffff1660e01b81526004016109ba979695949392919061285f565b6000604051808303818588803b1580156109d357600080fd5b505af11580156109e7573d6000803e3d6000fd5b5050505050505050505050505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b8051825114610b18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2077726f6e67206172726179206c656e67746873000060448201526064016107e3565b60005b8251811015610b7257610b60838281518110610b3957610b396128d5565b6020026020010151838381518110610b5357610b536128d5565b6020026020010151611e3f565b80610b6a81612904565b915050610b1b565b505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b7f56825e447adf54cdde5f04815fcf9b1dd26ef9d5c053625147c18b7c1309168655565b6000610c7b7f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b15610ce2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a20616c726561647920696e697469616c697a6564000060448201526064016107e3565b60008060008060008087806020019051810190610cff91906129e1565b955095509550955095509550327f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955857feb87cbb21687feb327e3d58c6c16d552231d12c7a0e8115042a4165fac8a77f955847fbd3084b8c09da87ad159c247a60e209784196be2530cecbbd8f337fdd184882755837f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f55827f46043c284a96474ab4a54c741ea0d0fce54e98eea878b99d4b85808fa6f71a5f558051825114610e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2077726f6e67206172726179206c656e67746873000060448201526064016107e3565b60005b8251811015610e5857610e46838281518110610b3957610b396128d5565b80610e5081612904565b915050610e28565b50610e8260017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d400000000000000000000000000000000000000000000000000000000979650505050505050565b610ee86040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610ef182611d55565b92915050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c955565b7f56825e447adf54cdde5f04815fcf9b1dd26ef9d5c053625147c18b7c13091686546000908161101f7fbd3084b8c09da87ad159c247a60e209784196be2530cecbbd8f337fdd18488275490565b73ffffffffffffffffffffffffffffffffffffffff166320fc06ea60028a63ffffffff1660036040518463ffffffff1660e01b815260040161106393929190612736565b602060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190612757565b90506000806110b38484611ee8565b91509150876000036110d557806fffffffffffffffffffffffffffffffff1697505b60006110e08b611d55565b90508060800151891161114f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f484f4c4f47524150483a2067617320707269636520746f6f206c6f770000000060448201526064016107e3565b606081015161115e908861279f565b604082015161116d908c6127dc565b61117791906127dc565b9950611184600a8b612b23565b61118e908b6127dc565b99508060a001518a106111fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f484f4c4f47524150483a20676173206c696d6974206f766572206d617800000060448201526064016107e3565b68056bc75e2d631000006fffffffffffffffffffffffffffffffff84166112248c8c61279f565b61122e919061279f565b6112389190612b23565b955063ffffffff8b1660071480611258575063ffffffff8b1663ee6b280f145b1561133e5768056bc75e2d63100000836fffffffffffffffffffffffffffffffff166112a27f46043c284a96474ab4a54c741ea0d0fce54e98eea878b99d4b85808fa6f71a5f5490565b73ffffffffffffffffffffffffffffffffffffffff166349948e0e8b8b6040518363ffffffff1660e01b81526004016112dc9291906126df565b602060405180830381865afa1580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d9190612757565b611327919061279f565b6113319190612b23565b61133b90876127dc565b95505b505050505095945050505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611402576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b7feb87cbb21687feb327e3d58c6c16d552231d12c7a0e8115042a4165fac8a77f955565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b6114e68282611e3f565b5050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b7f46043c284a96474ab4a54c741ea0d0fce54e98eea878b99d4b85808fa6f71a5f55565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461167a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b7f7caba557ad34138fa3b7e43fb574e0e6cc10481c3073e0dffbc560db81b5c60f55565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b808260003760008082600034875af13d6000803e808015611774573d6000f35b3d6000fd5b5050505050565b7f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a2061646d696e206f6e6c792066756e6374696f6e000060448201526064016107e3565b7fbd3084b8c09da87ad159c247a60e209784196be2530cecbbd8f337fdd184882755565b60006118847f3f106594dc74eeef980dae234cde8324dc2497b13d27a0c59e55bd2ca10a07c95490565b905090565b6000806000806118b77fbd3084b8c09da87ad159c247a60e209784196be2530cecbbd8f337fdd18488275490565b73ffffffffffffffffffffffffffffffffffffffff166320fc06ea60028b63ffffffff1660036040518463ffffffff1660e01b81526004016118fb93929190612736565b602060405180830381865afa158015611918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193c9190612757565b7f56825e447adf54cdde5f04815fcf9b1dd26ef9d5c053625147c18b7c130916865490915060008061196e8385611ee8565b915091508960000361199057806fffffffffffffffffffffffffffffffff1699505b600061199b8d611d55565b905080608001518b11611a0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f484f4c4f47524150483a2067617320707269636520746f6f206c6f770000000060448201526064016107e3565b6020810151600090600190611a1f908c61279f565b8351611a2b91906127dc565b60405160f09290921b7fffff0000000000000000000000000000000000000000000000000000000000001660208301526022820152604201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526060830151909150611aa3908b61279f565b6040830151611ab2908f6127dc565b611abc91906127dc565b9c50611ac9600a8e612b23565b611ad3908e6127dc565b9c508160a001518d10611b42576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f484f4c4f47524150483a20676173206c696d6974206f766572206d617800000060448201526064016107e3565b60008573ffffffffffffffffffffffffffffffffffffffff166340a7bb1088308f8f6000886040518763ffffffff1660e01b8152600401611b8896959493929190612b37565b6040805180830381865afa158015611ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc89190612b98565b50905068056bc75e2d63100000856fffffffffffffffffffffffffffffffff168f8f611bf4919061279f565b611bfe919061279f565b611c089190612b23565b995063ffffffff8f1660071480611c28575063ffffffff8f1663ee6b280f145b15611d0e5768056bc75e2d63100000856fffffffffffffffffffffffffffffffff16611c727f46043c284a96474ab4a54c741ea0d0fce54e98eea878b99d4b85808fa6f71a5f5490565b73ffffffffffffffffffffffffffffffffffffffff166349948e0e8f8f6040518363ffffffff1660e01b8152600401611cac9291906126df565b602060405180830381865afa158015611cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ced9190612757565b611cf7919061279f565b611d019190612b23565b611d0b908b6127dc565b99505b97508768056bc75e2d63100000611d258686612bbc565b611d2f9190612bf4565b6fffffffffffffffffffffffffffffffff16975050505050505050955095509592505050565b611d8e6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600063ffffffff831615611df2576040805163ffffffff851660208201527f15eee82a0af3c04e4b65c3842105c973a6b0fb2a68728bf035809e13b38ce8cf9181019190915260600160405160208183030381529060405280519060200120611e14565b7f15eee82a0af3c04e4b65c3842105c973a6b0fb2a68728bf035809e13b38ce8cf5b90508160005b6006811015611e3757828101548252602090910190600101611e1a565b505050919050565b600063ffffffff831615611ea3576040805163ffffffff851660208201527f15eee82a0af3c04e4b65c3842105c973a6b0fb2a68728bf035809e13b38ce8cf9181019190915260600160405160208183030381529060405280519060200120611ec5565b7f15eee82a0af3c04e4b65c3842105c973a6b0fb2a68728bf035809e13b38ce8cf5b90508160005b600681101561177957815183820155602090910190600101611ecb565b6000808373ffffffffffffffffffffffffffffffffffffffff16634afb422b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5a9190612c23565b6040517fa466222200000000000000000000000000000000000000000000000000000000815261ffff8516600482015230602482015273ffffffffffffffffffffffffffffffffffffffff919091169063a46622229060440160c060405180830381865afa158015611fd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff49190612c40565b60409081015190517f765a8a5400000000000000000000000000000000000000000000000000000000815261ffff8516600482015273ffffffffffffffffffffffffffffffffffffffff9091169063765a8a54906024016040805180830381865afa158015612067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208b9190612d10565b915091505b9250929050565b61ffff811681146120a757600080fd5b50565b60008083601f8401126120bc57600080fd5b50813567ffffffffffffffff8111156120d457600080fd5b60208301915083602082850101111561209057600080fd5b67ffffffffffffffff811681146120a757600080fd5b6000806000806000806080878903121561211b57600080fd5b863561212681612097565b9550602087013567ffffffffffffffff8082111561214357600080fd5b61214f8a838b016120aa565b909750955060408901359150612164826120ec565b9093506060880135908082111561217a57600080fd5b5061218789828a016120aa565b979a9699509497509295939492505050565b63ffffffff811681146120a757600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146120a757600080fd5b600080600080600080600060c0888a0312156121e857600080fd5b8735965060208801359550604088013561220181612199565b94506060880135612211816121ab565b93506080880135925060a088013567ffffffffffffffff81111561223457600080fd5b6122408a828b016120aa565b989b979a50959850939692959293505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156122a5576122a5612253565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122f2576122f2612253565b604052919050565b600067ffffffffffffffff82111561231457612314612253565b5060051b60200190565b600060c0828403121561233057600080fd5b612338612282565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600082601f83011261238757600080fd5b8135602061239c612397836122fa565b6122ab565b82815260c092830285018201928282019190878511156123bb57600080fd5b8387015b858110156123de576123d1898261231e565b84529284019281016123bf565b5090979650505050505050565b600080604083850312156123fe57600080fd5b823567ffffffffffffffff8082111561241657600080fd5b818501915085601f83011261242a57600080fd5b8135602061243a612397836122fa565b82815260059290921b8401810191818101908984111561245957600080fd5b948201945b8386101561248057853561247181612199565b8252948201949082019061245e565b9650508601359250508082111561249657600080fd5b506124a385828601612376565b9150509250929050565b6000602082840312156124bf57600080fd5b81356124ca816121ab565b9392505050565b600060208083850312156124e457600080fd5b823567ffffffffffffffff808211156124fc57600080fd5b818501915085601f83011261251057600080fd5b81358181111561252257612522612253565b612552847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016122ab565b9150808252868482850101111561256857600080fd5b8084840185840137600090820190930192909252509392505050565b60006020828403121561259657600080fd5b81356124ca81612199565b6000806000806000608086880312156125b957600080fd5b85356125c481612199565b94506020860135935060408601359250606086013567ffffffffffffffff8111156125ee57600080fd5b6125fa888289016120aa565b969995985093965092949392505050565b60008060e0838503121561261e57600080fd5b823561262981612199565b9150612638846020850161231e565b90509250929050565b60008060006040848603121561265657600080fd5b8335612661816121ab565b9250602084013567ffffffffffffffff81111561267d57600080fd5b612689868287016120aa565b9497909650939450505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6020815260006126f3602083018486612696565b949350505050565b60058110612732577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6060810161274482866126fb565b8360208301526126f360408301846126fb565b60006020828403121561276957600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127d7576127d7612770565b500290565b600082198211156127ef576127ef612770565b500190565b6000815180845260005b8181101561281a576020818501810151868301820152016127fe565b8181111561282c576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b61ffff8816815260c06020820152600061287c60c08301896127f4565b828103604084015261288f81888a612696565b73ffffffffffffffffffffffffffffffffffffffff87811660608601528616608085015283810360a085015290506128c781856127f4565b9a9950505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361293557612935612770565b5060010190565b600082601f83011261294d57600080fd5b8151602061295d612397836122fa565b82815260c0928302850182019282820191908785111561297c57600080fd5b8387015b858110156123de5781818a0312156129985760008081fd5b6129a0612282565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a080830151908201528452928401928101612980565b60008060008060008060c087890312156129fa57600080fd5b8651612a05816121ab565b80965050602080880151612a18816121ab565b6040890151909650612a29816121ab565b6060890151909550612a3a816121ab565b608089015190945067ffffffffffffffff80821115612a5857600080fd5b818a0191508a601f830112612a6c57600080fd5b8151612a7a612397826122fa565b81815260059190911b8301840190848101908d831115612a9957600080fd5b938501935b82851015612ac0578451612ab181612199565b82529385019390850190612a9e565b60a08d01519097509450505080831115612ad957600080fd5b5050612ae789828a0161293c565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612b3257612b32612af4565b500490565b61ffff8716815273ffffffffffffffffffffffffffffffffffffffff8616602082015260a060408201526000612b7160a083018688612696565b84151560608401528281036080840152612b8b81856127f4565b9998505050505050505050565b60008060408385031215612bab57600080fd5b505080516020909101519092909150565b60006fffffffffffffffffffffffffffffffff80831681851681830481118215151615612beb57612beb612770565b02949350505050565b60006fffffffffffffffffffffffffffffffff80841680612c1757612c17612af4565b92169190910492915050565b600060208284031215612c3557600080fd5b81516124ca816121ab565b600060c08284031215612c5257600080fd5b60405160c0810181811067ffffffffffffffff82111715612c7557612c75612253565b6040528251612c8381612097565b81526020830151612c93816120ec565b60208201526040830151612ca6816121ab565b60408201526060830151612cb981612097565b60608201526080830151612ccc816120ec565b608082015260a0830151612cdf816121ab565b60a08201529392505050565b80516fffffffffffffffffffffffffffffffff81168114612d0b57600080fd5b919050565b60008060408385031215612d2357600080fd5b612d2c83612ceb565b915061263860208401612ceb56fea164736f6c634300080d000a";

type LayerZeroModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LayerZeroModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LayerZeroModule__factory extends ContractFactory {
  constructor(...args: LayerZeroModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LayerZeroModule> {
    return super.deploy(overrides || {}) as Promise<LayerZeroModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LayerZeroModule {
    return super.attach(address) as LayerZeroModule;
  }
  override connect(signer: Signer): LayerZeroModule__factory {
    return super.connect(signer) as LayerZeroModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LayerZeroModuleInterface {
    return new utils.Interface(_abi) as LayerZeroModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LayerZeroModule {
    return new Contract(address, _abi, signerOrProvider) as LayerZeroModule;
  }
}
